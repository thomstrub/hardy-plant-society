<<<<<<< HEAD
<<<<<<< HEAD
[{"/Users/Thom/code/hardy-plant-society/src/index.js":"1","/Users/Thom/code/hardy-plant-society/src/serviceWorker.js":"2","/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx":"3","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx":"4","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx":"5","/Users/Thom/code/hardy-plant-society/src/utils/userService.js":"6","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js":"7","/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx":"8","/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js":"9","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx":"10","/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx":"11","/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx":"12"},{"size":585,"mtime":1610919035047,"results":"13","hashOfConfig":"14"},{"size":5086,"mtime":1610734308620,"results":"15","hashOfConfig":"14"},{"size":1425,"mtime":1611715297154,"results":"16","hashOfConfig":"14"},{"size":2350,"mtime":1611715297155,"results":"17","hashOfConfig":"14"},{"size":1216,"mtime":1611008088032,"results":"18","hashOfConfig":"14"},{"size":1066,"mtime":1611715297156,"results":"19","hashOfConfig":"14"},{"size":312,"mtime":1610734308576,"results":"20","hashOfConfig":"14"},{"size":132,"mtime":1611715297150,"results":"21","hashOfConfig":"14"},{"size":925,"mtime":1611294592048,"results":"22","hashOfConfig":"14"},{"size":2853,"mtime":1611715297151,"results":"23","hashOfConfig":"14"},{"size":1852,"mtime":1611715297150,"results":"24","hashOfConfig":"14"},{"size":162,"mtime":1611715297153,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1pjlbbb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Thom/code/hardy-plant-society/src/index.js",[],["53","54"],"/Users/Thom/code/hardy-plant-society/src/serviceWorker.js",[],"/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx",["55","56"],"/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx",["57"],"/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx",["58"],"import React, { useState, useRef, useEffect } from 'react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport { useForm } from '../../hooks/useForm';\nimport userService from '../../utils/userService';\n\nexport default function LoginPage(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('')\n    const [state, handleChange]       = useForm({\n        email: '',\n        password: '',\n    })\n  \n    const formRef = useRef();\n\n    useEffect(() => {\n      formRef.current.checkValidity() ? setValidForm(false) : setValidForm(true);\n    }, []);\n\n    return (\n        <>\n          <h1>Login</h1>\n          <form  autoComplete=\"off\" ref={formRef} onSubmit={async (e) => {\n            e.preventDefault()\n            \n            try {\n                await userService.login(state);\n                // Route to wherever you want!\n                alert(\"Logged in, time to go code where you want to go now! ~ Login Component!\")\n              } catch (err) {\n                // Invalid user data (probably duplicate email)\n                setError(err.message)\n              }\n          }}>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={ state.email}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                name=\"pw\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={ state.password}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn\"\n              disabled={invalidForm}\n            >\n              Login\n            </button>\n          </form>\n\n          {error ? <ErrorMessage error={error} /> : null}\n        </>\n      );\n}\n\n","/Users/Thom/code/hardy-plant-society/src/utils/userService.js",["59"],"/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js",[],["60","61"],"/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js",["62"],"/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":13,"column":10,"nodeType":"69","messageId":"70","endLine":13,"endColumn":14},{"ruleId":"67","severity":1,"message":"71","line":20,"column":12,"nodeType":"69","messageId":"70","endLine":20,"endColumn":24},{"ruleId":"67","severity":1,"message":"72","line":7,"column":23,"nodeType":"69","messageId":"70","endLine":7,"endColumn":35},{"ruleId":"67","severity":1,"message":"72","line":8,"column":25,"nodeType":"69","messageId":"70","endLine":8,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":44,"column":1,"nodeType":"75","endLine":49,"endColumn":3},{"ruleId":"63","replacedBy":"76"},{"ruleId":"65","replacedBy":"77"},{"ruleId":"73","severity":1,"message":"74","line":33,"column":3,"nodeType":"75","endLine":38,"endColumn":5},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'handleLogout' is defined but never used.","'setValidForm' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["78"],["79"],"no-global-assign","no-unsafe-negation"]
=======
[{"/Users/Thom/code/hardy-plant-society/src/index.js":"1","/Users/Thom/code/hardy-plant-society/src/serviceWorker.js":"2","/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx":"3","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx":"4","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx":"5","/Users/Thom/code/hardy-plant-society/src/utils/userService.js":"6","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js":"7","/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx":"8","/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js":"9","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx":"10","/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx":"11","/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx":"12","/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx":"13","/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js":"14","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx":"15","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBar.jsx":"16","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchResults.jsx":"17","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/RadioComponent.jsx":"18","/Users/Thom/code/hardy-plant-society/src/pages/PlantFeedPage/PlantFeedPage.jsx":"19","/Users/Thom/code/hardy-plant-society/src/components/PlantFeed/PlantFeed.jsx":"20","/Users/Thom/code/hardy-plant-society/src/components/PlantCard/PlantCard.jsx":"21","/Users/Thom/code/hardy-plant-society/src/pages/PlantPostCreatePage/PlantPostCreatePage.jsx":"22","/Users/Thom/code/hardy-plant-society/src/pages/PlantDetailPage/PlantDetailPage.jsx":"23","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantShowCard.jsx":"24","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantDetailsCard.jsx":"25","/Users/Thom/code/hardy-plant-society/src/components/DetailsList/DetailsList.jsx":"26","/Users/Thom/code/hardy-plant-society/src/components/Carousel/Carousel.jsx":"27","/Users/Thom/code/hardy-plant-society/src/pages/ProfilePage/ProfilePage.jsx":"28","/Users/Thom/code/hardy-plant-society/src/components/ProfileSection/ProfileSection.jsx":"29","/Users/Thom/code/hardy-plant-society/src/components/Header/Header.jsx":"30","/Users/Thom/code/hardy-plant-society/src/pages/AdminPostCreatePage/AdminPostCreatePage.jsx":"31","/Users/Thom/code/hardy-plant-society/src/components/Forms/AdminPostForm/AdminPostForm.jsx":"32","/Users/Thom/code/hardy-plant-society/src/utils/adminPostService.js":"33","/Users/Thom/code/hardy-plant-society/src/pages/HomePage/HomePage.jsx":"34","/Users/Thom/code/hardy-plant-society/src/components/AdminPostFeed/AdminPostFeed.jsx":"35","/Users/Thom/code/hardy-plant-society/src/components/AdminPostCard/AdminPostCard.jsx":"36","/Users/Thom/code/hardy-plant-society/src/components/EmailModal/EmailModal.jsx":"37","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart1.jsx":"38","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart2.jsx":"39","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/SearchItem.jsx":"40","/Users/Thom/code/hardy-plant-society/src/components/Forms/EmailForm/EmailForm.jsx":"41","/Users/Thom/code/hardy-plant-society/src/components/HeroSection/HeroSection.jsx":"42","/Users/Thom/code/hardy-plant-society/src/components/ConfirmDeleteModal/ConfirmDeleteModal.jsx":"43"},{"size":585,"mtime":1610919035047,"results":"44","hashOfConfig":"45"},{"size":5086,"mtime":1610734308620,"results":"46","hashOfConfig":"45"},{"size":3321,"mtime":1611713583018,"results":"47","hashOfConfig":"45"},{"size":2816,"mtime":1611032341156,"results":"48","hashOfConfig":"45"},{"size":1216,"mtime":1611008088032,"results":"49","hashOfConfig":"45"},{"size":1375,"mtime":1611463776941,"results":"50","hashOfConfig":"45"},{"size":312,"mtime":1610734308576,"results":"51","hashOfConfig":"45"},{"size":138,"mtime":1611277467964,"results":"52","hashOfConfig":"45"},{"size":925,"mtime":1611294592048,"results":"53","hashOfConfig":"45"},{"size":3459,"mtime":1611519472584,"results":"54","hashOfConfig":"45"},{"size":1859,"mtime":1611518547645,"results":"55","hashOfConfig":"45"},{"size":296,"mtime":1611026356259,"results":"56","hashOfConfig":"45"},{"size":280,"mtime":1611713511619,"results":"57","hashOfConfig":"45"},{"size":1638,"mtime":1611599280284,"results":"58","hashOfConfig":"45"},{"size":5524,"mtime":1611713826913,"results":"59","hashOfConfig":"45"},{"size":864,"mtime":1611713395693,"results":"60","hashOfConfig":"45"},{"size":940,"mtime":1611713432480,"results":"61","hashOfConfig":"45"},{"size":644,"mtime":1611713448580,"results":"62","hashOfConfig":"45"},{"size":1095,"mtime":1611700623786,"results":"63","hashOfConfig":"45"},{"size":565,"mtime":1611712081543,"results":"64","hashOfConfig":"45"},{"size":2358,"mtime":1611714389746,"results":"65","hashOfConfig":"45"},{"size":1600,"mtime":1611713639163,"results":"66","hashOfConfig":"45"},{"size":2314,"mtime":1611713619808,"results":"67","hashOfConfig":"45"},{"size":682,"mtime":1611687884545,"results":"68","hashOfConfig":"45"},{"size":1150,"mtime":1611713543831,"results":"69","hashOfConfig":"45"},{"size":160,"mtime":1611541945918,"results":"70","hashOfConfig":"45"},{"size":1308,"mtime":1611713747164,"results":"71","hashOfConfig":"45"},{"size":3209,"mtime":1611713655865,"results":"72","hashOfConfig":"45"},{"size":753,"mtime":1611538803223,"results":"73","hashOfConfig":"45"},{"size":3303,"mtime":1611714521331,"results":"74","hashOfConfig":"45"},{"size":1597,"mtime":1611713565978,"results":"75","hashOfConfig":"45"},{"size":2329,"mtime":1611544195544,"results":"76","hashOfConfig":"45"},{"size":753,"mtime":1611556383670,"results":"77","hashOfConfig":"45"},{"size":1559,"mtime":1611713600332,"results":"78","hashOfConfig":"45"},{"size":647,"mtime":1611713800683,"results":"79","hashOfConfig":"45"},{"size":1159,"mtime":1611713784740,"results":"80","hashOfConfig":"45"},{"size":512,"mtime":1611713318672,"results":"81","hashOfConfig":"45"},{"size":698,"mtime":1611638399788,"results":"82","hashOfConfig":"45"},{"size":2898,"mtime":1611713387117,"results":"83","hashOfConfig":"45"},{"size":619,"mtime":1611713466891,"results":"84","hashOfConfig":"45"},{"size":1958,"mtime":1611715026242,"results":"85","hashOfConfig":"45"},{"size":1036,"mtime":1611713500290,"results":"86","hashOfConfig":"45"},{"size":1435,"mtime":1611713267370,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1pjlbbb",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/Users/Thom/code/hardy-plant-society/src/index.js",[],["189","190"],"/Users/Thom/code/hardy-plant-society/src/serviceWorker.js",[],"/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx",["191","192"],"import React, { useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\n\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport userService from '../../utils/userService'\nimport AdminSignupPage from '../AdminSignupPage/AdminSignupPage';\nimport PlantPostCreatePage from '../PlantPostCreatePage/PlantPostCreatePage';\nimport PlantFeedPage from '../PlantFeedPage/PlantFeedPage';\nimport PlantDetailPage from '../PlantDetailPage/PlantDetailPage'\nimport ProfilePage from '../ProfilePage/ProfilePage'\nimport AdminPostCreatePage from '../AdminPostCreatePage/AdminPostCreatePage'\nimport HomePage from '../HomePage/HomePage'\n\nfunction App() {\n  // getUser decodes the JWT token into a javascript object\n  // this corresponds to the JWT payload defined in the server\n  // signup or login function-- const token = createJWT(user) -- where user is the document created from mongo\n  const [user, setUser] = useState(userService.getUser())\n  const [isAdminPost, setIsAdminPost] = useState(false)\n\n\n// get the user from localstorage and decode the token\n  function handleSignUpOrLogin(){\n    setUser(userService.getUser()) \n  }\n\n  function handleLogout(){\n    userService.logout();\n    setUser({user: null});\n  }\n  \n   \n\n  const [loading, setLoading] = useState(false);\n  \n  \n\n\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/\">\n              <HomePage user={user} isAdminPost={isAdminPost} setIsAdminPost={setIsAdminPost}/>\n          </Route>\n          \n          \n          <Route exact path=\"/login\">\n             <LoginPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/signup\">\n             <SignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/admin\">\n             <AdminSignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/admin/posts/new\">\n              {userService.getUser()?\n                <AdminPostCreatePage user={user} loading={loading} setLoading={setLoading} user={user} handleLogout={handleLogout}/>\n              :\n                <Redirect to='/login'/>\n              }\n                  \n          </Route>\n          <Route exact path=\"/plantswap/\">\n              <PlantFeedPage user={user} handleLogout={handleLogout}/>\n          </Route>\n          <Route exact path=\"/plantswap/new\">\n              {userService.getUser()?\n                <PlantPostCreatePage user={user} setLoading={setLoading} loading={loading} user={user} handleLogout={handleLogout}/>\n              :\n                <Redirect to='/login'/>\n              }\n                  \n          </Route>\n          <Route path=\"/plantswap/:id\">\n                  <PlantDetailPage user={user} handleLogout={handleLogout}/>\n          </Route>\n                \n          <Route path=\"/:username\">\n            \n            {userService.getUser()?\n              <ProfilePage user={user} handleLogout={handleLogout} isAdminPost={isAdminPost} setIsAdminPost={setIsAdminPost}/>\n              :\n                <Redirect to='/login'/>\n              }\n          </Route>   \n                \n                \n        \n         \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx",["193"],"import React, { useState } from 'react';\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\nimport SignupForm from '../../components/Forms/SignupForm/SignupForm'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\n\nexport default function SignUpPage(props){\n  const [invalidForm, setValidForm] = useState(false)\n  const [error, setError ] = useState('')\n  const [selectedFile, setSelectedFile] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [state, setState]  = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n    bio: '',\n    isAdmin: props.admin ? true : false,\n    adminPw:\"\"\n  });\n\n  const history = useHistory()\n  \n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async function handleSubmit(e){\n    // add this later\n    e.preventDefault();\n    setLoading(true);\n    if(props.admin && state.adminPw !== \"felco2\"){\n      setError(\"Wrong credentials\")\n      console.log(error)\n    } else{\n    // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n\n      const formData = new FormData();\n      formData.append('photo', selectedFile);\n\n\n      // generating rest of form data by looping over the state object!\n      for (let key in state){\n        formData.append(key, state[key])\n      }\n      //fyi if you log out formData you won't see anything you have to use the folllowing\n\n      // Display the key/value pairs\n      // for (var pair of formData.entries()) {\n      //   console.log(pair[0]+ ', ' + pair[1]); \n      // }\n\n      // SO now we have are data prepared to send over in our formData object\n      try {\n        // refere to the utils/userService, to look at the signup fetch function\n        await userService.signup(formData);\n        // setTheUser in our app\n        props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\n        // with the correct user object from the current token\n        // then route to the homepage\n        setLoading(false);\n        history.push('/') // defined above from react-router-dom\n        // after this we can go whereever\n\n      } catch(err){\n        console.log(err.message)\n        setError(err.message)\n      }\n    }\n  }\n\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n \n    \n    return (\n      <>\n        {loading ?\n        <LoadingMsg />\n        :\n        <SignupForm \n          handleChange={handleChange} \n          handleSubmit={handleSubmit} \n          handleFileInput={handleFileInput}\n          state={state}\n          error={error}\n          invalidForm={invalidForm}\n        />\n        }\n        \n      </>\n      );   \n    \n}\n","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx",["194"],"import React, { useState } from 'react';\nimport './LoginPage.css';\nimport { useHistory } from 'react-router-dom';\nimport userService from '../../utils/userService';\nimport LoginForm from '../../components/Forms/LoginForm/LoginForm'\n\nexport default function LoginPage(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('')\n    const [state, setState]       = useState({\n        email: '',\n        password: '',\n    })\n  \n    const history = useHistory();\n    \n    function handleChange(e){\n      setState({\n        ...state,\n        [e.target.name]: e.target.value\n      })\n    }\n   \n    \n\n    async function handleSubmit(e){\n      e.preventDefault()\n              \n      try {\n          await userService.login(state);\n          // Route to wherever you want!\n          props.handleSignUpOrLogin() // \n          history.push('/')\n          \n        } catch (err) {\n          // Invalid user data (probably duplicate email)\n          setError(err.message)\n        }\n    }\n\n    return (\n        <>\n          <LoginForm handleSubmit={handleSubmit} handleChange={handleChange} state={state} error={error} invalidForm={invalidForm}/>\n        </>\n      );\n}\n\n","/Users/Thom/code/hardy-plant-society/src/utils/userService.js",["195"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log(user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction getProfile(username){\n  return fetch(BASE_URL + username, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  }).then(res => {\n    if(res.ok) return res.json()\n    throw new Error('User does not exist') // This is the error in our try catch(err)\n  })\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login,\n  getProfile\n};","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js",[],["196","197"],"/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js",["198"],"function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx",["199"],"import React, { useState } from 'react'\nimport SignupPage from '../SignupPage/SignupPage'\n\nexport default function AdminSignupPage({handleSignUpOrLogin}){\n    const[admin, setAdmin] = useState(true)\n    return(\n        <SignupPage handleSignUpOrLogin={handleSignUpOrLogin} admin={admin}/>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx",["200","201","202","203"],"import React, { useState, useEffect } from 'react';\nimport { Form, Segment } from 'semantic-ui-react'\n\nimport 'react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css';\n\n\nimport * as plantPostAPI from '../../../utils/plantPostService'\nimport PlantPostFormPart1 from './PlantPostFormPart1'\nimport PlantPostFormPart2 from './PlantPostFormPart2'\n\nexport default function PlantPostForm(props){\n\n    //---------------------------------------- state hooks --------------------------------------//\n   // Image to be uploaded to AWS \n  const [selectedFile, setSelectedFile] = useState('')\n  // Custom form data\n  const [state, setState] = useState({\n    forSale: false,\n    isSeed: false,\n    isRootstock: false,\n    dateCollected: new Date(),\n    quantity: 1,\n    description: \"\",\n    photoUrl: \"\",\n    plant: \"\",\n    cultivar: \"\",\n    partOne: true\n\n  })\n\n  // Plant Search Results state\n  const [selected, setSelected] = useState('');\n  const [selectState, setSelectState] = useState('');\n\n  // Radio Toggle State\n  const [radioToggle, setRadioToggle] = useState(true);\n\n  // Trefle API data\n  const [trefleData, setTrefleData] = useState(\"\");\n  const [searchTag, setSearchTag] = useState(\"\");\n  const [toggle, setToggle] = useState(true);\n  const [selectData, setSelectData] = useState([]);\n  \n\n \n//---------------------------------------- useEffect --------------------------------------//\n\n   // Back end Trefle search request \n  \n   async function getTrefleData(search){\n   \n   try {\n     const data = await plantPostAPI.searchTrefle(search);\n     console.log(data.json.data, \"data from postform page\")\n     setTrefleData([...data.json.data])\n   } catch(err){\n     console.log(err, ' this is the error')\n   }\n   }  \n\n   useEffect(() => {\n       getTrefleData(searchTag)\n   }, [searchTag])\n  \n  // creates array for select menu from Trefle Data\n  useEffect(() => {\n    if(trefleData){\n        let mappedData = trefleData.map((result, index) => {\n            return ({\n                key: result.slug,\n                text: result.common_name ? result.common_name + \" / \" + result.scientific_name : result.scientific_name,\n                value: result.slug,\n                image: { avatar: true, src: result.image_url }\n            })\n        });\n        setSelectData(mappedData);\n        console.log(selectData, \"<----selectData from useEffect\")\n    }\n  }, [trefleData]);\n\n  // useEffect needed to update state due to asynchronous nature of setState\n  useEffect(() => {\n    setState({\n        ...state,\n        plant: selected\n    })\n    console.log(selected, \"Selected\")\n    console.log(state.plant, \"state.plant\")\n}, [selected])\n\n  //---------------------------------------- functions- handlers / submit --------------------------------------//\n  // handler for form part 1\n  function handlePlantPick(e){\n    e.preventDefault()\n    \n    setSelected(e.target.id);\n    console.log(\"Selected\", selected)\n     setState({\n        ...state,\n        plant: e.target.id\n    })   \n    console.log(state.plant, \"state.plant\")\n}\n  function toggleFormPart(e){\n      e.preventDefault()\n    \n      setState({\n        ...state,\n        partOne: !state.partOne\n      })\n  }\n\n  // Trefle API submit handler\n  const handleTrefleSubmit = (e, tag) => {\n    e.preventDefault()\n    console.log(\"From App - making API Call - tag - >\", tag);\n    setSearchTag(tag.replace(/\\s/g, '&'));\n    setToggle(!toggle);\n  };\n\n\n  // Photo File\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n\n  // update values for text fields\n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  // toggle between Seed and Plant submission\n  function handleToggle(e){\n      setState({\n          ...state,\n          isSeed: state.isSeed ? false : true,\n          isRootstock: state.isSeed ? false : true\n      })\n      setRadioToggle(!radioToggle);\n  }\n\n  // datepicker handler\n  function handleDate(event, data){\n    setState({\n        ...state,\n        dateCollected: data.value\n      })\n  }\n\n  function handleForSaleChange(){\n      setState({\n          ...state,\n          forSale: !state.forSale\n      })\n  }\n  \n\n\n  //main form submit handler\n  function handleSubmit(e){\n\n\n\n    e.preventDefault()\n             \n    const formData = new FormData()\n    formData.append('photo', selectedFile)\n    formData.append('forSale', state.forSale)\n    formData.append('isSeed', state.isSeed)\n    formData.append('isRootstock', state.isRootstock)\n    formData.append('dateCollected', state.dateCollected)\n    formData.append('quantity', state.quantity)\n    formData.append('description', state.description)\n    formData.append('plant', state.plant)\n    formData.append('cultivar', state.cultivar)\n    props.handleAddPost(formData)\n    \n  }\n\n\n  return (\n    \n  \n        <Segment>\n        \n            <Form  autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div hidden={!state.partOne}><PlantPostFormPart1 selected={state.plant} handlePlantPick={handlePlantPick} toggleFormPart={toggleFormPart} handleTrefleSubmit={handleTrefleSubmit} selectData={selectData} trefleData={trefleData} /></div>\n            <div hidden={state.partOne}><PlantPostFormPart2 toggleFormPart={toggleFormPart} user={props.user} handleToggle={handleToggle} radioToggle={radioToggle} state={state} handleChange={handleChange} handleDate={handleDate} handleForSaleChange={handleForSaleChange} handleFileInput={handleFileInput}/></div>\n\n            </Form>\n            \n          </Segment>\n     \n   \n  ); \n}","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBar.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchResults.jsx",["204"],"import React, {useState, useEffect} from 'react'\nimport { Item } from 'semantic-ui-react'\nimport SearchItem from './SearchItem'\n\n\n\nexport default function DropdownExampleSelection(props){\n\n \n  const[results, setResults] = useState([]);\n\n\n\n  useEffect(() => {\n    if(props.trefleData){\n        let mappedData = props.trefleData.slice(0,5).map((result, index) => {\n          return(\n            <SearchItem  selected={props.selected === result.slug ? true : false} handlePlantPick={props.handlePlantPick} image={result.image_url} key={index} text={result.common_name ? result.common_name + \" / \" + result.scientific_name : result.scientific_name} value={result.slug} />\n          )\n        });\n        \n        setResults(mappedData);\n        console.log(results, \"<----results from useEffect\")\n    }\n  }, [props.trefleData, props.selected]);\n  \n\n\n\n\n  return(\n    <>\n\n      <Item.Group>\n      {results}\n    </Item.Group>\n  </> \n  )\n  \n} \n  \n\n","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/RadioComponent.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/PlantFeedPage/PlantFeedPage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantFeed/PlantFeed.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantCard/PlantCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/PlantPostCreatePage/PlantPostCreatePage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/PlantDetailPage/PlantDetailPage.jsx",["205","206"],"import React, { useState, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\nimport * as plantPostService from '../../utils/plantPostService'\n\nimport PlantShowCard from '../../components/PlantShow/PlantShowCard'\nimport Header from '../../components/Header/Header'\n\n\nimport { useLocation } from 'react-router-dom';\n\n\nexport default function PlantDetailPage({ user, handleLogout }) {\n\n    const [post, setPost] = useState({})\n    // const [profileUser, setProfileUser] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n\n    const location = useLocation()\n    console.log(location.pathname.substring(1))\n\n    async function getShow() {\n\n        try {\n\n            // *HARDCODED* substring(10) returns the pathname after /plantswap specifically.\n            const plantDetail = location.pathname.substring(10)\n          \n            console.log(plantDetail)\n            const data = await plantPostService.getOne(plantDetail);\n            console.log(data, \"<--------- data from getShow\")\n            \n            setPost(data.post)\n            setLoading(() => false)\n        } catch (err) {\n            console.log(err)\n            setError(err)\n        }\n    }\n\n\n    \n\n\n    useEffect(() => {\n        getShow()\n\n    }, [])\n\n\n\n    return (\n\n        <>\n            { loading ?\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle' >\n                \n                        <Grid.Column style={{ maxWidth: 750}}>\n                            \n                                <LoadingMsg />\n                         \n                        </Grid.Column>\n                 \n                </Grid>\n                :\n                <Grid centered>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header user={user} handleLogout={handleLogout}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column style={{maxWidth: 800}}>\n                            <PlantShowCard post={post}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }\n        </>\n    )\n}\n","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantShowCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantDetailsCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/DetailsList/DetailsList.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Carousel/Carousel.jsx",["207","208"],"import React, {useState, useEffect} from 'react';\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\n\nfunction returnImages(images){\n    const imageElems = images.map((image, idx) => {\n        return(\n            <Slide key={idx} index={idx}><img width={240} src={image}/></Slide>\n        )\n    });\n    return(imageElems);\n}\n\nexport default function Carousel({plant}) {\n    \n    const [images, setImages] = useState([]);\n    console.log(plant.flowerImages.concat(plant.habitImages), \"image array\")\n    useEffect(() => {\n        const flowers = plant.flowerImages.map((flower) =>{\n            return(flower.image_url)\n        })\n        const plantImages = plant.habitImages.map((plantImage) =>{\n            return(plantImage.image_url)\n        })\n        setImages(returnImages(flowers.concat(plantImages)));\n    }, [])\n    console.log(images, \"images\")\n    \n      return (\n        <CarouselProvider\n          naturalSlideWidth={100}\n          naturalSlideHeight={125}\n          totalSlides={images.length}\n        >\n          <Slider>\n          {images}\n          \n        </Slider>\n        <ButtonBack>Back</ButtonBack>\n        <ButtonNext>Next</ButtonNext>\n        </CarouselProvider>\n      );\n    \n  }\n","/Users/Thom/code/hardy-plant-society/src/pages/ProfilePage/ProfilePage.jsx",["209","210","211"],"import React, { useState, useEffect } from 'react';\nimport { Grid} from 'semantic-ui-react'\nimport userService from '../../utils/userService';\nimport ProfileSection from '../../components/ProfileSection/ProfileSection';\nimport PlantFeed from '../../components/PlantFeed/PlantFeed';\nimport Header from '../../components/Header/Header'\nimport { useLocation } from 'react-router-dom';\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\nimport * as plantPostAPI from '../../utils/plantPostService'\n\nexport default function ProfilePage({ user, handleLogout, setIsAdminPost, isAdminPost }) {\n\n    const [posts, setPosts] = useState([])\n    const [profileUser, setProfileUser] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n\n    const location = useLocation()\n    console.log(location, \"location\")\n\n    \n\n    async function getProfile() {\n        \n        try {\n\n            const username = location.pathname.substring(1)\n            // location.pathname returns /jimbo so we need to cut off the / using the js method substring\n            // This gets the username from the url! \n            console.log(username, \"<--------------username!!!\")\n            const data = await userService.getProfile(username);\n            console.log(data)\n            setLoading(() => false)\n            setPosts(() => [...data.posts])\n            setProfileUser(() => data.user)\n        } catch (err) {\n            console.log(err)\n            setError(err)\n        }\n    }\n\n    async function deletePost(postId) {\n        try {\n            const data = await plantPostAPI.removePost(postId);\n            getProfile();\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    useEffect(() => {\n        if (location.pathname.substring(1) !== \"plantswap\")\n        getProfile()\n\n        // triggers the correct delete function in the delete confirmation modal\n        setIsAdminPost(false)\n    }, [])\n\n\n\n    return (\n\n        <>\n            { loading ?\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle' >\n                \n                        <Grid.Column style={{ maxWidth: 450}}>\n                            \n                                <LoadingMsg/>\n                         \n                        </Grid.Column>\n                 \n                </Grid>\n                :\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header user={user} handleLogout={handleLogout}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <ProfileSection user={profileUser} />\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row centered>\n                        <Grid.Column style={{ maxWidth: 1050 }}>\n                            <PlantFeed isProfile={true} posts={posts} isAdminPost={isAdminPost} user={user} deletePost={deletePost} />\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }\n        </>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/ProfileSection/ProfileSection.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Header/Header.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/AdminPostCreatePage/AdminPostCreatePage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/AdminPostForm/AdminPostForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/adminPostService.js",[],"/Users/Thom/code/hardy-plant-society/src/pages/HomePage/HomePage.jsx",["212","213"],"import React, { useState, useEffect } from 'react';\nimport HeroSection from '../../components/HeroSection/HeroSection'\nimport AdminPostFeed from '../../components/AdminPostFeed/AdminPostFeed';\nimport PageHeader from '../../components/Header/Header'\nimport {  Grid } from 'semantic-ui-react'\nimport * as adminPostAPI from '../../utils/adminPostService'\n\nexport default function Feed({user, handleLogout, setIsAdminPost, isAdminPost}){  \n\n\n      \n    const [posts, setPosts] = useState([]);\n\n\n    async function removePost(postId) {\n        try {\n            const data = await adminPostAPI.removePost(postId);\n            getPosts();\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    async function getPosts(){\n    \n    try {\n      const data = await adminPostAPI.getAll();\n      setPosts([...data.posts])\n    } catch(err){\n      console.log(err, ' this is the error')\n    }\n    }  \n\n    useEffect(() => {\n        getPosts()\n        setIsAdminPost(true)\n    }, [])\n    \n\n\n\n    return (\n        \n      <Grid centered >\n        <Grid.Row>\n          <Grid.Column>\n            <PageHeader user={user} handleLogout={handleLogout}/>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n        <Grid.Column fluid>\n          <HeroSection />\n        </Grid.Column>\n        </Grid.Row>\n     \n        \n        <Grid.Row>\n        <Grid.Column style={{maxWidth: 1050}}>\n          <AdminPostFeed posts={posts} user={user} removePost={removePost} isAdminPost={isAdminPost}/>\n        </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/AdminPostFeed/AdminPostFeed.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/AdminPostCard/AdminPostCard.jsx",["214"],"import React from 'react'\nimport { Item } from 'semantic-ui-react'\nimport ConfirmDeleteModal from '../ConfirmDeleteModal/ConfirmDeleteModal'\n\nimport './AdminPostCard.css'\n\n\nexport default function AdminPostFeed({post, removePost, user, isAdminPost}){\n\n    \n\n    const handleClick = () => removePost(post._id);\n\n    return(\n       \n        <Item>\n          <Item.Image rounded size='medium' src={post.photoUrl} />\n    \n          <Item.Content>\n            <Item.Header  >\n            <div className=\"space\">\n                <span>{post.title}</span>\n                {user.isAdmin ? \n                    <ConfirmDeleteModal post={post} removePost={removePost} isAdminPost={isAdminPost} />\n                :\n                    \"\"\n                }\n                \n            </div>\n                    \n                \n            \n            </Item.Header>\n            <Item.Meta>{post.date}</Item.Meta>\n            <Item.Description>\n              <p>{post.body}</p>\n            </Item.Description>\n            <Item.Extra>{post.user ? post.user.username : \"HPS Admin\"}</Item.Extra>\n          </Item.Content>\n        </Item>\n    \n        \n      \n    )\n\n} ","/Users/Thom/code/hardy-plant-society/src/components/EmailModal/EmailModal.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart1.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart2.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/SearchItem.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/EmailForm/EmailForm.jsx",["215"],"/Users/Thom/code/hardy-plant-society/src/components/HeroSection/HeroSection.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/ConfirmDeleteModal/ConfirmDeleteModal.jsx",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":60,"column":92,"nodeType":"222","endLine":60,"endColumn":103},{"ruleId":"220","severity":1,"message":"221","line":71,"column":92,"nodeType":"222","endLine":71,"endColumn":103},{"ruleId":"223","severity":1,"message":"224","line":8,"column":23,"nodeType":"225","messageId":"226","endLine":8,"endColumn":35},{"ruleId":"223","severity":1,"message":"224","line":8,"column":25,"nodeType":"225","messageId":"226","endLine":8,"endColumn":37},{"ruleId":"227","severity":1,"message":"228","line":55,"column":1,"nodeType":"229","endLine":61,"endColumn":3},{"ruleId":"216","replacedBy":"230"},{"ruleId":"218","replacedBy":"231"},{"ruleId":"227","severity":1,"message":"228","line":33,"column":3,"nodeType":"229","endLine":38,"endColumn":5},{"ruleId":"223","severity":1,"message":"232","line":5,"column":18,"nodeType":"225","messageId":"226","endLine":5,"endColumn":26},{"ruleId":"223","severity":1,"message":"233","line":33,"column":10,"nodeType":"225","messageId":"226","endLine":33,"endColumn":21},{"ruleId":"223","severity":1,"message":"234","line":33,"column":23,"nodeType":"225","messageId":"226","endLine":33,"endColumn":37},{"ruleId":"235","severity":1,"message":"236","line":79,"column":6,"nodeType":"237","endLine":79,"endColumn":18,"suggestions":"238"},{"ruleId":"235","severity":1,"message":"239","line":89,"column":4,"nodeType":"237","endLine":89,"endColumn":14,"suggestions":"240"},{"ruleId":"235","severity":1,"message":"241","line":25,"column":6,"nodeType":"237","endLine":25,"endColumn":40,"suggestions":"242"},{"ruleId":"223","severity":1,"message":"243","line":18,"column":12,"nodeType":"225","messageId":"226","endLine":18,"endColumn":17},{"ruleId":"235","severity":1,"message":"244","line":49,"column":8,"nodeType":"237","endLine":49,"endColumn":10,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":9,"column":42,"nodeType":"248","endLine":9,"endColumn":72},{"ruleId":"235","severity":1,"message":"249","line":27,"column":8,"nodeType":"237","endLine":27,"endColumn":10,"suggestions":"250"},{"ruleId":"223","severity":1,"message":"243","line":16,"column":12,"nodeType":"225","messageId":"226","endLine":16,"endColumn":17},{"ruleId":"223","severity":1,"message":"251","line":44,"column":19,"nodeType":"225","messageId":"226","endLine":44,"endColumn":23},{"ruleId":"235","severity":1,"message":"252","line":58,"column":8,"nodeType":"237","endLine":58,"endColumn":10,"suggestions":"253"},{"ruleId":"223","severity":1,"message":"251","line":17,"column":19,"nodeType":"225","messageId":"226","endLine":17,"endColumn":23},{"ruleId":"235","severity":1,"message":"254","line":37,"column":8,"nodeType":"237","endLine":37,"endColumn":10,"suggestions":"255"},{"ruleId":"223","severity":1,"message":"256","line":12,"column":11,"nodeType":"225","messageId":"226","endLine":12,"endColumn":22},{"ruleId":"223","severity":1,"message":"257","line":1,"column":26,"nodeType":"225","messageId":"226","endLine":1,"endColumn":35},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'setValidForm' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["258"],["259"],"'setAdmin' is assigned a value but never used.","'selectState' is assigned a value but never used.","'setSelectState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectData'. Either include it or remove the dependency array.","ArrayExpression",["260"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["261"],"React Hook useEffect has missing dependencies: 'props.handlePlantPick' and 'results'. Either include them or remove the dependency array.",["262"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getShow'. Either include it or remove the dependency array.",["263"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'plant.flowerImages' and 'plant.habitImages'. Either include them or remove the dependency array.",["264"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProfile', 'location.pathname', and 'setIsAdminPost'. Either include them or remove the dependency array. If 'setIsAdminPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["265"],"React Hook useEffect has a missing dependency: 'setIsAdminPost'. Either include it or remove the dependency array. If 'setIsAdminPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["266"],"'handleClick' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [selectData, trefleData]",{"range":"281","text":"282"},"Update the dependencies array to be: [selected, state]",{"range":"283","text":"284"},"Update the dependencies array to be: [props.trefleData, props.selected, props.handlePlantPick, results]",{"range":"285","text":"286"},"Update the dependencies array to be: [getShow]",{"range":"287","text":"288"},"Update the dependencies array to be: [plant.flowerImages, plant.habitImages]",{"range":"289","text":"290"},"Update the dependencies array to be: [getProfile, location.pathname, setIsAdminPost]",{"range":"291","text":"292"},"Update the dependencies array to be: [setIsAdminPost]",{"range":"293","text":"294"},[2372,2384],"[selectData, trefleData]",[2634,2644],"[selected, state]",[804,838],"[props.trefleData, props.selected, props.handlePlantPick, results]",[1354,1356],"[getShow]",[918,920],"[plant.flowerImages, plant.habitImages]",[1964,1966],"[getProfile, location.pathname, setIsAdminPost]",[984,986],"[setIsAdminPost]"]
>>>>>>> 388692335463cda041e28bf2996ca3a34f98beb3
=======
[{"/Users/Thom/code/hardy-plant-society/src/index.js":"1","/Users/Thom/code/hardy-plant-society/src/serviceWorker.js":"2","/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx":"3","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx":"4","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx":"5","/Users/Thom/code/hardy-plant-society/src/utils/userService.js":"6","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js":"7","/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx":"8","/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js":"9","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx":"10","/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx":"11","/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx":"12","/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx":"13","/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js":"14","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx":"15","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBar.jsx":"16","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchResults.jsx":"17","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/RadioComponent.jsx":"18","/Users/Thom/code/hardy-plant-society/src/pages/PlantFeedPage/PlantFeedPage.jsx":"19","/Users/Thom/code/hardy-plant-society/src/components/PlantFeed/PlantFeed.jsx":"20","/Users/Thom/code/hardy-plant-society/src/components/PlantCard/PlantCard.jsx":"21","/Users/Thom/code/hardy-plant-society/src/pages/PlantPostCreatePage/PlantPostCreatePage.jsx":"22","/Users/Thom/code/hardy-plant-society/src/pages/PlantDetailPage/PlantDetailPage.jsx":"23","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantShowCard.jsx":"24","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantDetailsCard.jsx":"25","/Users/Thom/code/hardy-plant-society/src/components/DetailsList/DetailsList.jsx":"26","/Users/Thom/code/hardy-plant-society/src/components/Carousel/Carousel.jsx":"27","/Users/Thom/code/hardy-plant-society/src/pages/ProfilePage/ProfilePage.jsx":"28","/Users/Thom/code/hardy-plant-society/src/components/ProfileSection/ProfileSection.jsx":"29","/Users/Thom/code/hardy-plant-society/src/components/Header/Header.jsx":"30","/Users/Thom/code/hardy-plant-society/src/pages/AdminPostCreatePage/AdminPostCreatePage.jsx":"31","/Users/Thom/code/hardy-plant-society/src/components/Forms/AdminPostForm/AdminPostForm.jsx":"32","/Users/Thom/code/hardy-plant-society/src/utils/adminPostService.js":"33","/Users/Thom/code/hardy-plant-society/src/pages/HomePage/HomePage.jsx":"34","/Users/Thom/code/hardy-plant-society/src/components/AdminPostFeed/AdminPostFeed.jsx":"35","/Users/Thom/code/hardy-plant-society/src/components/AdminPostCard/AdminPostCard.jsx":"36","/Users/Thom/code/hardy-plant-society/src/components/EmailModal/EmailModal.jsx":"37","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart1.jsx":"38","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart2.jsx":"39","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/SearchItem.jsx":"40","/Users/Thom/code/hardy-plant-society/src/components/Forms/EmailForm/EmailForm.jsx":"41","/Users/Thom/code/hardy-plant-society/src/components/HeroSection/HeroSection.jsx":"42","/Users/Thom/code/hardy-plant-society/src/components/ConfirmDeleteModal/ConfirmDeleteModal.jsx":"43","/Users/Thom/code/hardy-plant-society/src/utils/emailPostService.js":"44"},{"size":585,"mtime":1610919035047,"results":"45","hashOfConfig":"46"},{"size":5086,"mtime":1610734308620,"results":"47","hashOfConfig":"46"},{"size":3297,"mtime":1611721303568,"results":"48","hashOfConfig":"46"},{"size":2816,"mtime":1611715501400,"results":"49","hashOfConfig":"46"},{"size":1216,"mtime":1611008088032,"results":"50","hashOfConfig":"46"},{"size":1375,"mtime":1611715501417,"results":"51","hashOfConfig":"46"},{"size":312,"mtime":1610734308576,"results":"52","hashOfConfig":"46"},{"size":138,"mtime":1611715501335,"results":"53","hashOfConfig":"46"},{"size":925,"mtime":1611294592048,"results":"54","hashOfConfig":"46"},{"size":3459,"mtime":1611715501350,"results":"55","hashOfConfig":"46"},{"size":1859,"mtime":1611715501341,"results":"56","hashOfConfig":"46"},{"size":296,"mtime":1611715501372,"results":"57","hashOfConfig":"46"},{"size":280,"mtime":1611715501356,"results":"58","hashOfConfig":"46"},{"size":1638,"mtime":1611715501410,"results":"59","hashOfConfig":"46"},{"size":4780,"mtime":1611720799296,"results":"60","hashOfConfig":"46"},{"size":864,"mtime":1611715501346,"results":"61","hashOfConfig":"46"},{"size":962,"mtime":1611720049607,"results":"62","hashOfConfig":"46"},{"size":644,"mtime":1611715501348,"results":"63","hashOfConfig":"46"},{"size":1095,"mtime":1611715501388,"results":"64","hashOfConfig":"46"},{"size":565,"mtime":1611715501359,"results":"65","hashOfConfig":"46"},{"size":2358,"mtime":1611715501358,"results":"66","hashOfConfig":"46"},{"size":1600,"mtime":1611715501395,"results":"67","hashOfConfig":"46"},{"size":2185,"mtime":1611718878539,"results":"68","hashOfConfig":"46"},{"size":682,"mtime":1611715501369,"results":"69","hashOfConfig":"46"},{"size":1150,"mtime":1611715501362,"results":"70","hashOfConfig":"46"},{"size":160,"mtime":1611715501332,"results":"71","hashOfConfig":"46"},{"size":1310,"mtime":1611721413470,"results":"72","hashOfConfig":"46"},{"size":2939,"mtime":1611721009971,"results":"73","hashOfConfig":"46"},{"size":753,"mtime":1611715501370,"results":"74","hashOfConfig":"46"},{"size":3303,"mtime":1611715501353,"results":"75","hashOfConfig":"46"},{"size":1597,"mtime":1611715501371,"results":"76","hashOfConfig":"46"},{"size":2329,"mtime":1611715501336,"results":"77","hashOfConfig":"46"},{"size":753,"mtime":1611715501405,"results":"78","hashOfConfig":"46"},{"size":1554,"mtime":1611721637984,"results":"79","hashOfConfig":"46"},{"size":647,"mtime":1611715501327,"results":"80","hashOfConfig":"46"},{"size":1106,"mtime":1611721123185,"results":"81","hashOfConfig":"46"},{"size":512,"mtime":1611715501333,"results":"82","hashOfConfig":"46"},{"size":698,"mtime":1611715501345,"results":"83","hashOfConfig":"46"},{"size":2898,"mtime":1611715501346,"results":"84","hashOfConfig":"46"},{"size":619,"mtime":1611715501349,"results":"85","hashOfConfig":"46"},{"size":2191,"mtime":1611718515642,"results":"86","hashOfConfig":"46"},{"size":890,"mtime":1611721580042,"results":"87","hashOfConfig":"46"},{"size":1290,"mtime":1611721079102,"results":"88","hashOfConfig":"46"},{"size":266,"mtime":1611716514955,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1pjlbbb",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Thom/code/hardy-plant-society/src/index.js",[],["192","193"],"/Users/Thom/code/hardy-plant-society/src/serviceWorker.js",[],"/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx",["194"],"import React, { useState } from 'react';\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\nimport SignupForm from '../../components/Forms/SignupForm/SignupForm'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\n\nexport default function SignUpPage(props){\n  const [invalidForm, setValidForm] = useState(false)\n  const [error, setError ] = useState('')\n  const [selectedFile, setSelectedFile] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [state, setState]  = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n    bio: '',\n    isAdmin: props.admin ? true : false,\n    adminPw:\"\"\n  });\n\n  const history = useHistory()\n  \n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async function handleSubmit(e){\n    // add this later\n    e.preventDefault();\n    setLoading(true);\n    if(props.admin && state.adminPw !== \"felco2\"){\n      setError(\"Wrong credentials\")\n      console.log(error)\n    } else{\n    // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n\n      const formData = new FormData();\n      formData.append('photo', selectedFile);\n\n\n      // generating rest of form data by looping over the state object!\n      for (let key in state){\n        formData.append(key, state[key])\n      }\n      //fyi if you log out formData you won't see anything you have to use the folllowing\n\n      // Display the key/value pairs\n      // for (var pair of formData.entries()) {\n      //   console.log(pair[0]+ ', ' + pair[1]); \n      // }\n\n      // SO now we have are data prepared to send over in our formData object\n      try {\n        // refere to the utils/userService, to look at the signup fetch function\n        await userService.signup(formData);\n        // setTheUser in our app\n        props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\n        // with the correct user object from the current token\n        // then route to the homepage\n        setLoading(false);\n        history.push('/') // defined above from react-router-dom\n        // after this we can go whereever\n\n      } catch(err){\n        console.log(err.message)\n        setError(err.message)\n      }\n    }\n  }\n\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n \n    \n    return (\n      <>\n        {loading ?\n        <LoadingMsg />\n        :\n        <SignupForm \n          handleChange={handleChange} \n          handleSubmit={handleSubmit} \n          handleFileInput={handleFileInput}\n          state={state}\n          error={error}\n          invalidForm={invalidForm}\n        />\n        }\n        \n      </>\n      );   \n    \n}\n","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx",["195"],"import React, { useState } from 'react';\nimport './LoginPage.css';\nimport { useHistory } from 'react-router-dom';\nimport userService from '../../utils/userService';\nimport LoginForm from '../../components/Forms/LoginForm/LoginForm'\n\nexport default function LoginPage(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('')\n    const [state, setState]       = useState({\n        email: '',\n        password: '',\n    })\n  \n    const history = useHistory();\n    \n    function handleChange(e){\n      setState({\n        ...state,\n        [e.target.name]: e.target.value\n      })\n    }\n   \n    \n\n    async function handleSubmit(e){\n      e.preventDefault()\n              \n      try {\n          await userService.login(state);\n          // Route to wherever you want!\n          props.handleSignUpOrLogin() // \n          history.push('/')\n          \n        } catch (err) {\n          // Invalid user data (probably duplicate email)\n          setError(err.message)\n        }\n    }\n\n    return (\n        <>\n          <LoginForm handleSubmit={handleSubmit} handleChange={handleChange} state={state} error={error} invalidForm={invalidForm}/>\n        </>\n      );\n}\n\n","/Users/Thom/code/hardy-plant-society/src/utils/userService.js",["196"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log(user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction getProfile(username){\n  return fetch(BASE_URL + username, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  }).then(res => {\n    if(res.ok) return res.json()\n    throw new Error('User does not exist') // This is the error in our try catch(err)\n  })\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login,\n  getProfile\n};","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js",[],["197","198"],"/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js",["199"],"function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx",["200"],"import React, { useState } from 'react'\nimport SignupPage from '../SignupPage/SignupPage'\n\nexport default function AdminSignupPage({handleSignUpOrLogin}){\n    const[admin, setAdmin] = useState(true)\n    return(\n        <SignupPage handleSignUpOrLogin={handleSignUpOrLogin} admin={admin}/>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx",["201","202","203"],"import React, { useState, useEffect } from 'react';\nimport { Form, Segment } from 'semantic-ui-react'\n\nimport 'react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css';\n\n\nimport * as plantPostAPI from '../../../utils/plantPostService'\nimport PlantPostFormPart1 from './PlantPostFormPart1'\nimport PlantPostFormPart2 from './PlantPostFormPart2'\n\nexport default function PlantPostForm(props){\n\n    //---------------------------------------- state hooks --------------------------------------//\n   // Image to be uploaded to AWS \n  const [selectedFile, setSelectedFile] = useState('')\n  // Custom form data\n  const [state, setState] = useState({\n    forSale: false,\n    isSeed: false,\n    isRootstock: false,\n    dateCollected: new Date(),\n    quantity: 1,\n    description: \"\",\n    photoUrl: \"\",\n    plant: \"\",\n    cultivar: \"\",\n    partOne: true\n\n  })\n\n  // Plant Search Results state\n  const [selected, setSelected] = useState('');\n  const [selectState, setSelectState] = useState('');\n\n  // Radio Toggle State\n  const [radioToggle, setRadioToggle] = useState(true);\n\n  // Trefle API data\n  const [trefleData, setTrefleData] = useState(\"\");\n  const [searchTag, setSearchTag] = useState(\"astilbe\");\n  const [toggle, setToggle] = useState(true);\n \n  \n\n \n//---------------------------------------- useEffect --------------------------------------//\n\n   // Back end Trefle search request \n  \n   async function getTrefleData(search){\n   \n   try {\n     const data = await plantPostAPI.searchTrefle(search);\n     console.log(data.json.data, \"data from postform page\")\n     setTrefleData([...data.json.data])\n   } catch(err){\n     console.log(err, ' this is the error')\n   }\n   }  \n\n   useEffect(() => {\n       getTrefleData(searchTag)\n   }, [searchTag])\n  \n\n  // useEffect needed to update state due to asynchronous nature of setState\n  useEffect(() => {\n    setState({\n        ...state,\n        plant: selected\n    })\n    \n}, [selected])\n\n  //---------------------------------------- functions- handlers / submit --------------------------------------//\n  // handler for form part 1\n  function handlePlantPick(e){\n    e.preventDefault()\n    \n    setSelected(e.target.id);\n    console.log(\"Selected\", selected)\n     setState({\n        ...state,\n        plant: e.target.id\n    })   \n    \n  }\n\n    function toggleFormPart(e){\n      e.preventDefault()\n    \n      setState({\n        ...state,\n        partOne: !state.partOne\n      })\n  }\n\n  // Trefle API submit handler to search for plant\n  function handleTrefleSubmit(e, tag) {\n    e.preventDefault()\n    console.log(\"From App - making API Call - tag - >\", tag);\n    setSearchTag(tag.replace(/\\s/g, '&'));\n    setToggle(!toggle);\n  };\n\n\n  // Photo File\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n\n  // update values for text fields\n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  // toggle between Seed and Plant submission\n  function handleToggle(e){\n      setState({\n          ...state,\n          isSeed: state.isSeed ? false : true,\n          isRootstock: state.isSeed ? false : true\n      })\n      setRadioToggle(!radioToggle);\n  }\n\n  // datepicker handler\n  function handleDate(event, data){\n    setState({\n        ...state,\n        dateCollected: data.value\n      })\n  }\n\n  function handleForSaleChange(){\n      setState({\n          ...state,\n          forSale: !state.forSale\n      })\n  }\n  \n\n\n  //main form submit handler\n  function handleSubmit(e){\n\n\n\n    e.preventDefault()\n             \n    const formData = new FormData()\n    formData.append('photo', selectedFile)\n    formData.append('forSale', state.forSale)\n    formData.append('isSeed', state.isSeed)\n    formData.append('isRootstock', state.isRootstock)\n    formData.append('dateCollected', state.dateCollected)\n    formData.append('quantity', state.quantity)\n    formData.append('description', state.description)\n    formData.append('plant', state.plant)\n    formData.append('cultivar', state.cultivar)\n    props.handleAddPost(formData)\n    \n  }\n\n\n  return (\n    \n  \n        <Segment>\n        \n            <Form  autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div hidden={!state.partOne}><PlantPostFormPart1 selected={state.plant} handlePlantPick={handlePlantPick} toggleFormPart={toggleFormPart} handleTrefleSubmit={handleTrefleSubmit} trefleData={trefleData} /></div>\n            <div hidden={state.partOne}><PlantPostFormPart2 toggleFormPart={toggleFormPart} user={props.user} handleToggle={handleToggle} radioToggle={radioToggle} state={state} handleChange={handleChange} handleDate={handleDate} handleForSaleChange={handleForSaleChange} handleFileInput={handleFileInput}/></div>\n\n            </Form>\n            \n          </Segment>\n     \n   \n  ); \n}","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBar.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchResults.jsx",["204"],"import React, {useState, useEffect} from 'react'\nimport { Item } from 'semantic-ui-react'\nimport SearchItem from './SearchItem'\n\n\n\nexport default function DropdownExampleSelection(props){\n\n \n  const[results, setResults] = useState([]);\n\n\n\n  useEffect(() => {\n    if(props.trefleData){\n        let mappedData = props.trefleData.slice(0,5).map((result, index) => {\n          return(\n            <SearchItem  selected={props.selected === result.slug ? true : false} \n              handlePlantPick={props.handlePlantPick} \n              image={result.image_url} key={index} \n              text={result.common_name ? result.common_name + \" / \" + result.scientific_name : result.scientific_name} \n              value={result.slug} \n            />\n          )\n        });\n        \n        setResults(mappedData);\n        \n    }\n  }, [props.trefleData, props.selected]);\n  \n\n\n\n\n  return(\n    <>\n\n      <Item.Group>\n      {results}\n    </Item.Group>\n  </> \n  )\n  \n} \n  \n\n","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/RadioComponent.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/PlantFeedPage/PlantFeedPage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantFeed/PlantFeed.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantCard/PlantCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/PlantPostCreatePage/PlantPostCreatePage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/PlantDetailPage/PlantDetailPage.jsx",["205","206"],"import React, { useState, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\nimport * as plantPostService from '../../utils/plantPostService'\n\nimport PlantShowCard from '../../components/PlantShow/PlantShowCard'\nimport Header from '../../components/Header/Header'\n\n\nimport { useLocation } from 'react-router-dom';\n\n\nexport default function PlantDetailPage({ user, handleLogout }) {\n\n    const [post, setPost] = useState({})\n    // const [profileUser, setProfileUser] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n\n    const location = useLocation()\n    \n\n    async function getShow() {\n\n        try {\n\n            // *HARDCODED* substring(10) returns the pathname after /plantswap specifically.\n            const plantDetail = location.pathname.substring(10)\n          \n            const data = await plantPostService.getOne(plantDetail);\n            \n            \n            setPost(data.post)\n            setLoading(() => false)\n        } catch (err) {\n            console.log(err)\n            setError(err)\n        }\n    }\n\n\n    \n\n\n    useEffect(() => {\n        getShow()\n\n    }, [])\n\n\n\n    return (\n\n        <>\n            { loading ?\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle' >\n                \n                        <Grid.Column style={{ maxWidth: 750}}>\n                            \n                                <LoadingMsg />\n                         \n                        </Grid.Column>\n                 \n                </Grid>\n                :\n                <Grid centered>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header user={user} handleLogout={handleLogout}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column style={{maxWidth: 800}}>\n                            <PlantShowCard post={post}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }\n        </>\n    )\n}\n","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantShowCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantDetailsCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/DetailsList/DetailsList.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Carousel/Carousel.jsx",["207","208"],"import React, {useState, useEffect} from 'react';\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\n\nfunction returnImages(images){\n    const imageElems = images.map((image, idx) => {\n        return(\n            <Slide key={idx} index={idx}><img width={240} src={image} alt=\"flower or habitat photo\"/></Slide>\n        )\n    });\n    return(imageElems);\n}\n\nexport default function Carousel({plant}) {\n    \n    const [images, setImages] = useState([]);\n    \n    // API returns images of flower and images of habitat (among others)\n    useEffect(() => {\n        const flowers = plant.flowerImages.map((flower) =>{\n            return(flower.image_url)\n        })\n        const plantImages = plant.habitImages.map((plantImage) =>{\n            return(plantImage.image_url)\n        })\n        setImages(returnImages(flowers.concat(plantImages)));\n    }, [])\n    \n    \n      return (\n        <CarouselProvider\n          naturalSlideWidth={100}\n          naturalSlideHeight={125}\n          totalSlides={images.length}\n        >\n          <Slider>\n          {images}\n          \n        </Slider>\n        <ButtonBack>Back</ButtonBack>\n        <ButtonNext>Next</ButtonNext>\n        </CarouselProvider>\n      );\n    \n  }\n","/Users/Thom/code/hardy-plant-society/src/pages/ProfilePage/ProfilePage.jsx",["209","210","211"],"import React, { useState, useEffect } from 'react';\nimport { Grid} from 'semantic-ui-react'\nimport userService from '../../utils/userService';\nimport ProfileSection from '../../components/ProfileSection/ProfileSection';\nimport PlantFeed from '../../components/PlantFeed/PlantFeed';\nimport Header from '../../components/Header/Header'\nimport { useLocation } from 'react-router-dom';\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\nimport * as plantPostAPI from '../../utils/plantPostService'\n\nexport default function ProfilePage({ user, handleLogout, setIsAdminPost, isAdminPost }) {\n\n    const [posts, setPosts] = useState([])\n    const [profileUser, setProfileUser] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n\n    const location = useLocation()\n\n    async function getProfile() {\n        \n        try {\n\n            const username = location.pathname.substring(1) \n            \n            const data = await userService.getProfile(username);\n            \n            setLoading(() => false)\n            setPosts(() => [...data.posts])\n            setProfileUser(() => data.user)\n        } catch (err) {\n            console.log(err)\n            setError(err)\n        }\n    }\n\n    async function deletePost(postId) {\n        try {\n            const data = await plantPostAPI.removePost(postId);\n            getProfile();\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    useEffect(() => {\n        if (location.pathname.substring(1) !== \"plantswap\")\n        getProfile()\n\n        // triggers the correct delete function in the delete confirmation modal\n        setIsAdminPost(false)\n    }, [])\n\n\n\n    return (\n\n        <>\n            { loading ?\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle' >\n                \n                        <Grid.Column style={{ maxWidth: 450}}>\n                            \n                                <LoadingMsg/>\n                         \n                        </Grid.Column>\n                 \n                </Grid>\n                :\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header user={user} handleLogout={handleLogout}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <ProfileSection user={profileUser} />\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row centered>\n                        <Grid.Column style={{ maxWidth: 1050 }}>\n                            <PlantFeed isProfile={true} posts={posts} isAdminPost={isAdminPost} user={user} deletePost={deletePost} />\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }\n        </>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/ProfileSection/ProfileSection.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Header/Header.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/AdminPostCreatePage/AdminPostCreatePage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/AdminPostForm/AdminPostForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/adminPostService.js",[],"/Users/Thom/code/hardy-plant-society/src/pages/HomePage/HomePage.jsx",["212","213"],"import React, { useState, useEffect } from 'react';\nimport HeroSection from '../../components/HeroSection/HeroSection'\nimport AdminPostFeed from '../../components/AdminPostFeed/AdminPostFeed';\nimport PageHeader from '../../components/Header/Header'\nimport {  Grid } from 'semantic-ui-react'\nimport * as adminPostAPI from '../../utils/adminPostService'\n\nexport default function Feed({user, handleLogout, setIsAdminPost, isAdminPost}){  \n\n\n      \n    const [posts, setPosts] = useState([]);\n\n\n    async function removePost(postId) {\n        try {\n            const data = await adminPostAPI.removePost(postId);\n            getPosts();\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    async function getPosts(){\n    \n    try {\n      const data = await adminPostAPI.getAll();\n      setPosts([...data.posts])\n    } catch(err){\n      console.log(err, ' this is the error')\n    }\n    }  \n\n    useEffect(() => {\n        getPosts()\n        setIsAdminPost(true)\n    }, [])\n    \n\n\n\n    return (\n        \n      <Grid centered >\n        <Grid.Row>\n          <Grid.Column>\n            <PageHeader user={user} handleLogout={handleLogout}/>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n        <Grid.Column >\n          <HeroSection />\n        </Grid.Column>\n        </Grid.Row>\n     \n        \n        <Grid.Row>\n        <Grid.Column style={{maxWidth: 1050}}>\n          <AdminPostFeed posts={posts} user={user} removePost={removePost} isAdminPost={isAdminPost}/>\n        </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/AdminPostFeed/AdminPostFeed.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/AdminPostCard/AdminPostCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/EmailModal/EmailModal.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart1.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart2.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/SearchItem.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/EmailForm/EmailForm.jsx",["214"],"import React, {useState, useEffect} from 'react';\nimport { Button, Modal } from 'semantic-ui-react'\nimport * as emailAPI from '../../../utils/emailPostService'\nexport default function EmailForm({setOpen, post, user}) {\n \n  const [state, setState] = useState({\n    message: '',\n\tname: post.user.username,\n\tsender: user.username,\n\tplant: post.plant.species,\n\ttoEmail: post.user.email,\n\treplyEmail: user.email\n  })\n\n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  function handleSubmit(e) {\n\t  e.preventDefault()\n\n\tsendEmail({message: state.message, plant: state.plant, to_name: state.name, from_name: state.sender, send_to: state.toEmail ,reply_to: state.replyEmail})\n\t// close modal\n\tsetOpen(false)\n  }\n\n\n  // EmailJS API so users can email eachother about their plants\n  async function sendEmail (variables) {\n\n\t// auth for email API hidden in .env -- need to request those from the server\n\tconst credentials = await emailAPI.getEmailAuth()\n\tawait window.emailjs.send(\n\t// plug in the email and template credentials\n  \tcredentials.email, credentials.template,\n  \tvariables\n  \t).then(res => {\n    \tconsole.log('Email successfully sent!')\n  \t})\n  \t// Handle errors here however you like, or use a React error boundary\n  \t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n  }\n  \n\treturn (\n\t\t<>\n\t\t<Modal.Header >Request this plant</Modal.Header>\n\t\t<Modal.Content>\n\t\t  <Modal.Description>\n\t\t\t<p><strong>Your Message to {post.user.username}</strong></p>\n\t\t\t<form className=\"message\">\n    \t\n\t\t\t<div>\n\t\t\t<textarea\n\t\t\t\tid=\"message\"\n\t\t\t\tname=\"message\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tplaceholder={`Hi ${post.user.username}, This is ${user.username}. When is a good time to pick up the plant? Thanks!`}\n\t\t\t\trequired\n\t\t\t\tvalue={state.message}\n\t\t\t\tstyle={{width: '100%', height: '150px'}}\n\t\t\t/>\n\t\t\t</div>\n\t\t\t\n  \t</form>\n\t\t  </Modal.Description>\n\t\t</Modal.Content>\n\t\t<Modal.Actions>\n\t\t  <Button color='grey' onClick={() => setOpen(false)}>\n\t\t\tCancel\n\t\t  </Button>\n\t\t  <Button\n\t\t\tcontent=\"Send Email\"\n\t\t\t\n\t\t\t\n\t\t\tonClick={handleSubmit}\n\t\t\tpositive\n\t\t  />\n\t\t</Modal.Actions>\n\t</>\n\t)\n  \n\n\n}\n\n","/Users/Thom/code/hardy-plant-society/src/components/HeroSection/HeroSection.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/ConfirmDeleteModal/ConfirmDeleteModal.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/emailPostService.js",[],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":8,"column":23,"nodeType":"221","messageId":"222","endLine":8,"endColumn":35},{"ruleId":"219","severity":1,"message":"220","line":8,"column":25,"nodeType":"221","messageId":"222","endLine":8,"endColumn":37},{"ruleId":"223","severity":1,"message":"224","line":55,"column":1,"nodeType":"225","endLine":61,"endColumn":3},{"ruleId":"215","replacedBy":"226"},{"ruleId":"217","replacedBy":"227"},{"ruleId":"223","severity":1,"message":"224","line":33,"column":3,"nodeType":"225","endLine":38,"endColumn":5},{"ruleId":"219","severity":1,"message":"228","line":5,"column":18,"nodeType":"221","messageId":"222","endLine":5,"endColumn":26},{"ruleId":"219","severity":1,"message":"229","line":33,"column":10,"nodeType":"221","messageId":"222","endLine":33,"endColumn":21},{"ruleId":"219","severity":1,"message":"230","line":33,"column":23,"nodeType":"221","messageId":"222","endLine":33,"endColumn":37},{"ruleId":"231","severity":1,"message":"232","line":73,"column":4,"nodeType":"233","endLine":73,"endColumn":14,"suggestions":"234"},{"ruleId":"231","severity":1,"message":"235","line":30,"column":6,"nodeType":"233","endLine":30,"endColumn":40,"suggestions":"236"},{"ruleId":"219","severity":1,"message":"237","line":18,"column":12,"nodeType":"221","messageId":"222","endLine":18,"endColumn":17},{"ruleId":"231","severity":1,"message":"238","line":48,"column":8,"nodeType":"233","endLine":48,"endColumn":10,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":9,"column":42,"nodeType":"242","endLine":9,"endColumn":102},{"ruleId":"231","severity":1,"message":"243","line":28,"column":8,"nodeType":"233","endLine":28,"endColumn":10,"suggestions":"244"},{"ruleId":"219","severity":1,"message":"237","line":16,"column":12,"nodeType":"221","messageId":"222","endLine":16,"endColumn":17},{"ruleId":"219","severity":1,"message":"245","line":39,"column":19,"nodeType":"221","messageId":"222","endLine":39,"endColumn":23},{"ruleId":"231","severity":1,"message":"246","line":53,"column":8,"nodeType":"233","endLine":53,"endColumn":10,"suggestions":"247"},{"ruleId":"219","severity":1,"message":"245","line":17,"column":19,"nodeType":"221","messageId":"222","endLine":17,"endColumn":23},{"ruleId":"231","severity":1,"message":"248","line":37,"column":8,"nodeType":"233","endLine":37,"endColumn":10,"suggestions":"249"},{"ruleId":"219","severity":1,"message":"250","line":1,"column":26,"nodeType":"221","messageId":"222","endLine":1,"endColumn":35},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'setValidForm' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["251"],["252"],"'setAdmin' is assigned a value but never used.","'selectState' is assigned a value but never used.","'setSelectState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["253"],"React Hook useEffect has a missing dependency: 'props.handlePlantPick'. Either include it or remove the dependency array.",["254"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getShow'. Either include it or remove the dependency array.",["255"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'plant.flowerImages' and 'plant.habitImages'. Either include them or remove the dependency array.",["256"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProfile', 'location.pathname', and 'setIsAdminPost'. Either include them or remove the dependency array. If 'setIsAdminPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["257"],"React Hook useEffect has a missing dependency: 'setIsAdminPost'. Either include it or remove the dependency array. If 'setIsAdminPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["258"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [selected, state]",{"range":"271","text":"272"},"Update the dependencies array to be: [props.trefleData, props.selected, props.handlePlantPick]",{"range":"273","text":"274"},"Update the dependencies array to be: [getShow]",{"range":"275","text":"276"},"Update the dependencies array to be: [plant.flowerImages, plant.habitImages]",{"range":"277","text":"278"},"Update the dependencies array to be: [getProfile, location.pathname, setIsAdminPost]",{"range":"279","text":"280"},"Update the dependencies array to be: [setIsAdminPost]",{"range":"281","text":"282"},[1931,1941],"[selected, state]",[826,860],"[props.trefleData, props.selected, props.handlePlantPick]",[1225,1227],"[getShow]",[949,951],"[plant.flowerImages, plant.habitImages]",[1694,1696],"[getProfile, location.pathname, setIsAdminPost]",[984,986],"[setIsAdminPost]"]
>>>>>>> thom-edits
