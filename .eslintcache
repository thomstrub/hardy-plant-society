[{"/Users/Thom/code/hardy-plant-society/src/index.js":"1","/Users/Thom/code/hardy-plant-society/src/serviceWorker.js":"2","/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx":"3","/Users/Thom/code/hardy-plant-society/src/utils/userService.js":"4","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx":"5","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx":"6","/Users/Thom/code/hardy-plant-society/src/pages/PlantPostCreatePage/PlantPostCreatePage.jsx":"7","/Users/Thom/code/hardy-plant-society/src/pages/PlantDetailPage/PlantDetailPage.jsx":"8","/Users/Thom/code/hardy-plant-society/src/pages/ProfilePage/ProfilePage.jsx":"9","/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx":"10","/Users/Thom/code/hardy-plant-society/src/pages/PlantFeedPage/PlantFeedPage.jsx":"11","/Users/Thom/code/hardy-plant-society/src/pages/HomePage/HomePage.jsx":"12","/Users/Thom/code/hardy-plant-society/src/pages/AdminPostCreatePage/AdminPostCreatePage.jsx":"13","/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js":"14","/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js":"15","/Users/Thom/code/hardy-plant-society/src/utils/adminPostService.js":"16","/Users/Thom/code/hardy-plant-society/src/components/Header/Header.jsx":"17","/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx":"18","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantShowCard.jsx":"19","/Users/Thom/code/hardy-plant-society/src/components/PlantFeed/PlantFeed.jsx":"20","/Users/Thom/code/hardy-plant-society/src/components/AdminPostFeed/AdminPostFeed.jsx":"21","/Users/Thom/code/hardy-plant-society/src/components/ProfileSection/ProfileSection.jsx":"22","/Users/Thom/code/hardy-plant-society/src/components/HeroSection/HeroSection.jsx":"23","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx":"24","/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx":"25","/Users/Thom/code/hardy-plant-society/src/components/Forms/AdminPostForm/AdminPostForm.jsx":"26","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx":"27","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantDetailsCard.jsx":"28","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart2.jsx":"29","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart1.jsx":"30","/Users/Thom/code/hardy-plant-society/src/components/PlantCard/PlantCard.jsx":"31","/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx":"32","/Users/Thom/code/hardy-plant-society/src/components/AdminPostCard/AdminPostCard.jsx":"33","/Users/Thom/code/hardy-plant-society/src/components/Carousel/Carousel.jsx":"34","/Users/Thom/code/hardy-plant-society/src/components/ConfirmDeleteModal/ConfirmDeleteModal.jsx":"35","/Users/Thom/code/hardy-plant-society/src/components/EmailModal/EmailModal.jsx":"36","/Users/Thom/code/hardy-plant-society/src/components/DetailsList/DetailsList.jsx":"37","/Users/Thom/code/hardy-plant-society/src/components/Forms/EmailForm/EmailForm.jsx":"38","/Users/Thom/code/hardy-plant-society/src/utils/emailPostService.js":"39","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/FormComponents/PlantSearchBar.jsx":"40","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/FormComponents/PlantSearchResults.jsx":"41","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/FormComponents/SearchItem.jsx":"42","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/FormComponents/RadioComponent.jsx":"43"},{"size":585,"mtime":1610919035047,"results":"44","hashOfConfig":"45"},{"size":5086,"mtime":1610734308620,"results":"46","hashOfConfig":"45"},{"size":3351,"mtime":1615274953061,"results":"47","hashOfConfig":"45"},{"size":1725,"mtime":1615274953072,"results":"48","hashOfConfig":"45"},{"size":3293,"mtime":1615274953069,"results":"49","hashOfConfig":"45"},{"size":1216,"mtime":1611008088032,"results":"50","hashOfConfig":"45"},{"size":1503,"mtime":1619728990154,"results":"51","hashOfConfig":"45"},{"size":2176,"mtime":1615274953064,"results":"52","hashOfConfig":"45"},{"size":2912,"mtime":1615274953068,"results":"53","hashOfConfig":"45"},{"size":296,"mtime":1611715501372,"results":"54","hashOfConfig":"45"},{"size":1093,"mtime":1615274953066,"results":"55","hashOfConfig":"45"},{"size":1625,"mtime":1615274953063,"results":"56","hashOfConfig":"45"},{"size":1597,"mtime":1611715501371,"results":"57","hashOfConfig":"45"},{"size":965,"mtime":1615274953071,"results":"58","hashOfConfig":"45"},{"size":1193,"mtime":1615274953070,"results":"59","hashOfConfig":"45"},{"size":753,"mtime":1611715501405,"results":"60","hashOfConfig":"45"},{"size":4463,"mtime":1615274953056,"results":"61","hashOfConfig":"45"},{"size":272,"mtime":1615274953059,"results":"62","hashOfConfig":"45"},{"size":682,"mtime":1611715501369,"results":"63","hashOfConfig":"45"},{"size":565,"mtime":1611715501359,"results":"64","hashOfConfig":"45"},{"size":647,"mtime":1611715501327,"results":"65","hashOfConfig":"45"},{"size":753,"mtime":1611715501370,"results":"66","hashOfConfig":"45"},{"size":1038,"mtime":1615274953058,"results":"67","hashOfConfig":"45"},{"size":3592,"mtime":1615274953054,"results":"68","hashOfConfig":"45"},{"size":1965,"mtime":1615274953047,"results":"69","hashOfConfig":"45"},{"size":2329,"mtime":1611715501336,"results":"70","hashOfConfig":"45"},{"size":4657,"mtime":1619930241104,"results":"71","hashOfConfig":"45"},{"size":1150,"mtime":1611715501362,"results":"72","hashOfConfig":"45"},{"size":3047,"mtime":1615274953054,"results":"73","hashOfConfig":"45"},{"size":801,"mtime":1615274953053,"results":"74","hashOfConfig":"45"},{"size":2268,"mtime":1615274953060,"results":"75","hashOfConfig":"45"},{"size":138,"mtime":1611715501335,"results":"76","hashOfConfig":"45"},{"size":1063,"mtime":1615274953045,"results":"77","hashOfConfig":"45"},{"size":1309,"mtime":1615274953046,"results":"78","hashOfConfig":"45"},{"size":1290,"mtime":1611733361455,"results":"79","hashOfConfig":"45"},{"size":512,"mtime":1611715501333,"results":"80","hashOfConfig":"45"},{"size":160,"mtime":1611715501332,"results":"81","hashOfConfig":"45"},{"size":2191,"mtime":1611723231212,"results":"82","hashOfConfig":"45"},{"size":266,"mtime":1611723231217,"results":"83","hashOfConfig":"45"},{"size":1062,"mtime":1619930034806,"results":"84","hashOfConfig":"45"},{"size":962,"mtime":1615274953049,"results":"85","hashOfConfig":"45"},{"size":596,"mtime":1615274953050,"results":"86","hashOfConfig":"45"},{"size":644,"mtime":1615274953050,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1pjlbbb",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/Users/Thom/code/hardy-plant-society/src/index.js",[],["186","187"],"/Users/Thom/code/hardy-plant-society/src/serviceWorker.js",[],"/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/userService.js",["188"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log(user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction signupNoPhoto(user) {\n  console.log(user);\n  console.log(BASE_URL + 'signup2')\n  return fetch(BASE_URL + 'signup2', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n\n}\n\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction getProfile(username){\n  return fetch(BASE_URL + username, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  }).then(res => {\n    if(res.ok) return res.json()\n    throw new Error('User does not exist') // This is the error in our try catch(err)\n  })\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login,\n  getProfile,\n  signupNoPhoto\n};","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx",["189"],"import React, { useState } from 'react';\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\nimport SignupForm from '../../components/Forms/SignupForm/SignupForm'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\n\nexport default function SignUpPage(props){\n  const [invalidForm, setValidForm] = useState(false)\n  const [error, setError ] = useState('')\n  const [selectedFile, setSelectedFile] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [state, setState]  = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n    bio: '',\n    isAdmin: props.admin ? true : false,\n    adminPw:\"\"\n  });\n\n  const history = useHistory()\n  \n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  function defaultPhoto(){\n    return({\n      ...state,\n      photoUrl: \"https://www.avasflowers.net/blog/wp-content/uploads/2019/03/Aprils-Birthflower-The-Dainty-Daisy-1-1.jpg\"\n    })\n  }\n\n  async function handleSubmit(e){\n    \n    e.preventDefault();\n    setLoading(true);\n\n    // admin signup credentials\n    if(props.admin && state.adminPw !== \"felco2\"){\n      setError(\"Wrong credentials\")\n      console.log(error)\n    } else{\n    // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n      if(selectedFile){\n        console.log(\"selected File\")\n        const formData = new FormData();\n      formData.append('photo', selectedFile);\n\n\n      // generating rest of form data by looping over the state object!\n      for (let key in state){\n        formData.append(key, state[key])\n      }\n      \n      try {\n        // refere to the utils/userService, to look at the signup fetch function\n        await userService.signup(formData);\n        // setTheUser in our app\n        props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\n        // with the correct user object from the current token\n        // then route to the homepage\n        setLoading(false);\n        history.push('/') // defined above from react-router-dom\n        // after this we can go whereever\n\n      } catch(err){\n        console.log(err.message)\n        setError(err.message)\n      }\n        \n      } else {\n        try {\n          //add a default image for the user\n          let user= defaultPhoto();\n          // refere to the utils/userService, to look at the signup fetch function\n          await userService.signupNoPhoto(user);\n          // setTheUser in our app\n          props.handleSignUpOrLogin() \n          setLoading(false);\n          history.push('/') \n  \n        } catch(err){\n          console.log(err.message)\n          setError(err.message)\n        }\n        \n        \n      }\n      \n    }\n  }\n\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n \n    \n    return (\n      <>\n        {loading ?\n        <LoadingMsg />\n        :\n        <SignupForm \n          handleChange={handleChange} \n          handleSubmit={handleSubmit} \n          handleFileInput={handleFileInput}\n          state={state}\n          error={error}\n          invalidForm={invalidForm}\n        />\n        }\n        \n      </>\n      );   \n    \n}\n","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx",["190"],"import React, { useState } from 'react';\nimport './LoginPage.css';\nimport { useHistory } from 'react-router-dom';\nimport userService from '../../utils/userService';\nimport LoginForm from '../../components/Forms/LoginForm/LoginForm'\n\nexport default function LoginPage(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('')\n    const [state, setState]       = useState({\n        email: '',\n        password: '',\n    })\n  \n    const history = useHistory();\n    \n    function handleChange(e){\n      setState({\n        ...state,\n        [e.target.name]: e.target.value\n      })\n    }\n   \n    \n\n    async function handleSubmit(e){\n      e.preventDefault()\n              \n      try {\n          await userService.login(state);\n          // Route to wherever you want!\n          props.handleSignUpOrLogin() // \n          history.push('/')\n          \n        } catch (err) {\n          // Invalid user data (probably duplicate email)\n          setError(err.message)\n        }\n    }\n\n    return (\n        <>\n          <LoginForm handleSubmit={handleSubmit} handleChange={handleChange} state={state} error={error} invalidForm={invalidForm}/>\n        </>\n      );\n}\n\n","/Users/Thom/code/hardy-plant-society/src/pages/PlantPostCreatePage/PlantPostCreatePage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/PlantDetailPage/PlantDetailPage.jsx",["191","192"],"import React, { useState, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\nimport * as plantPostService from '../../utils/plantPostService'\n\nimport PlantShowCard from '../../components/PlantShow/PlantShowCard'\nimport Header from '../../components/Header/Header'\n\n\nimport { useLocation } from 'react-router-dom';\n\n\nexport default function PlantDetailPage({ user, handleLogout }) {\n\n    const [post, setPost] = useState({})\n    // const [profileUser, setProfileUser] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n\n    const location = useLocation()\n    \n\n    async function getShow() {\n\n        try {\n\n            // *HARDCODED* substring(10) returns the pathname after /plantswap specifically.\n            const plantDetail = location.pathname.substring(10)\n          \n            const data = await plantPostService.getOne(plantDetail);\n            \n            \n            setPost(data.post)\n            setLoading(() => false)\n        } catch (err) {\n            console.log(err)\n            setError(err)\n        }\n    }\n\n    useEffect(() => {\n        getShow()\n\n    }, [])\n\n\n    return (\n\n        <>\n            { loading ?\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle' >\n                \n                        <Grid.Column style={{ maxWidth: 750}}>\n                            \n                                <LoadingMsg />\n                         \n                        </Grid.Column>\n                 \n                </Grid>\n                :\n                <Grid centered>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header user={user} handleLogout={handleLogout}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column style={{maxWidth: 800}}>\n                            <PlantShowCard post={post}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }\n        </>\n    )\n}\n","/Users/Thom/code/hardy-plant-society/src/pages/ProfilePage/ProfilePage.jsx",["193","194","195"],"import React, { useState, useEffect } from 'react';\nimport { Grid} from 'semantic-ui-react'\nimport userService from '../../utils/userService';\nimport ProfileSection from '../../components/ProfileSection/ProfileSection';\nimport PlantFeed from '../../components/PlantFeed/PlantFeed';\nimport Header from '../../components/Header/Header'\nimport { useLocation } from 'react-router-dom';\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\nimport * as plantPostAPI from '../../utils/plantPostService'\n\nexport default function ProfilePage({ user, handleLogout, setIsAdminPost, isAdminPost }) {\n\n    const [posts, setPosts] = useState([])\n    const [profileUser, setProfileUser] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n\n    const location = useLocation()\n\n    async function getProfile() {\n        \n        try {\n            const username = location.pathname.substring(1) \n            const data = await userService.getProfile(username);\n            setLoading(() => false)\n            setPosts(() => [...data.posts])\n            setProfileUser(() => data.user)\n        } catch (err) {\n            console.log(err)\n            setError(err)\n        }\n    }\n\n    async function deletePost(postId) {\n        try {\n            const data = await plantPostAPI.removePost(postId);\n            getProfile();\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    useEffect(() => {\n        if (location.pathname.substring(1) !== \"plantswap\")\n        getProfile()\n\n        // triggers the correct delete function in the delete confirmation modal\n        setIsAdminPost(false)\n    }, [])\n\n\n\n    return (\n\n        <>\n            { loading ?\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle' >\n                \n                        <Grid.Column style={{ maxWidth: 450}}>\n                            \n                                <LoadingMsg/>\n                         \n                        </Grid.Column>\n                 \n                </Grid>\n                :\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header user={user} handleLogout={handleLogout}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <ProfileSection user={profileUser} />\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row centered>\n                        <Grid.Column style={{ maxWidth: 1050 }}>\n                            <PlantFeed isProfile={true} posts={posts} isAdminPost={isAdminPost} user={user} deletePost={deletePost} />\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }\n        </>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx",["196"],"import React, { useState } from 'react'\nimport SignupPage from '../SignupPage/SignupPage'\n\nexport default function AdminSignupPage({handleSignUpOrLogin}){\n    const[admin, setAdmin] = useState(true)\n    return(\n        <SignupPage handleSignUpOrLogin={handleSignUpOrLogin} admin={admin}/>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/pages/PlantFeedPage/PlantFeedPage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/HomePage/HomePage.jsx",["197","198"],"import React, { useState, useEffect } from 'react';\nimport HeroSection from '../../components/HeroSection/HeroSection'\nimport AdminPostFeed from '../../components/AdminPostFeed/AdminPostFeed';\nimport PageHeader from '../../components/Header/Header'\nimport {  Grid } from 'semantic-ui-react'\nimport * as adminPostAPI from '../../utils/adminPostService'\n\nexport default function Feed({user, handleLogout, setIsAdminPost, isAdminPost}){  \n\n\n      \n    const [posts, setPosts] = useState([]);\n\n\n    async function removePost(postId) {\n        try {\n            const data = await adminPostAPI.removePost(postId);\n            getPosts();\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    async function getPosts(){\n    \n    try {\n      const data = await adminPostAPI.getAll();\n      setPosts([...data.posts])\n    } catch(err){\n      console.log(err, ' this is the error')\n    }\n    }  \n\n    useEffect(() => {\n        getPosts()\n        setIsAdminPost(true)\n    }, [])\n  \n\n    return (\n        \n      <Grid centered >\n        <Grid.Row>\n          <Grid.Column>\n            <PageHeader user={user} handleLogout={handleLogout}/>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n        <Grid.Column >\n          <HeroSection user={user}/>\n        </Grid.Column>\n        </Grid.Row>\n     \n        \n        <Grid.Row>\n        <Grid.Column style={{maxWidth: 1050}}>\n        {user ?\n            <AdminPostFeed posts={posts} user={user} removePost={removePost} isAdminPost={isAdminPost}/>\n        :\n            \"\"\n        }\n          \n        </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/pages/AdminPostCreatePage/AdminPostCreatePage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js",["199"],"function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    console.log(\"token service remove\")\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js",[],"/Users/Thom/code/hardy-plant-society/src/utils/adminPostService.js",[],"/Users/Thom/code/hardy-plant-society/src/components/Header/Header.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantShowCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantFeed/PlantFeed.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/AdminPostFeed/AdminPostFeed.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/ProfileSection/ProfileSection.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/HeroSection/HeroSection.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/AdminPostForm/AdminPostForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx",["200"],"/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantDetailsCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart2.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart1.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantCard/PlantCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/AdminPostCard/AdminPostCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Carousel/Carousel.jsx",["201","202"],"import React, {useState, useEffect} from 'react';\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\nfunction returnImages(images){\n    const imageElems = images.map((image, idx) => {\n        return(\n            <Slide key={idx} index={idx}><img width={240} src={image} alt=\"flower or habitat photo\"/></Slide>\n        )\n    });\n    return(imageElems);\n}\n\nexport default function Carousel({plant}) {\n    \n    const [images, setImages] = useState([]);\n    \n    // API returns images of flower and images of habitat (among others)\n    useEffect(() => {\n        const flowers = plant.flowerImages.map((flower) =>{\n            return(flower.image_url)\n        })\n        const plantImages = plant.habitImages.map((plantImage) =>{\n            return(plantImage.image_url)\n        })\n        setImages(returnImages(flowers.concat(plantImages)));\n    }, [])\n    \n    \n      return (\n        <CarouselProvider\n          naturalSlideWidth={100}\n          naturalSlideHeight={125}\n          totalSlides={images.length}\n        >\n          <Slider>\n          {images}\n          \n        </Slider>\n        <ButtonBack>Back</ButtonBack>\n        <ButtonNext>Next</ButtonNext>\n        </CarouselProvider>\n      );\n    \n  }\n","/Users/Thom/code/hardy-plant-society/src/components/ConfirmDeleteModal/ConfirmDeleteModal.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/EmailModal/EmailModal.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/DetailsList/DetailsList.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/EmailForm/EmailForm.jsx",["203"],"import React, {useState, useEffect} from 'react';\nimport { Button, Modal } from 'semantic-ui-react'\nimport * as emailAPI from '../../../utils/emailPostService'\nexport default function EmailForm({setOpen, post, user}) {\n \n  const [state, setState] = useState({\n    message: '',\n\tname: post.user.username,\n\tsender: user.username,\n\tplant: post.plant.species,\n\ttoEmail: post.user.email,\n\treplyEmail: user.email\n  })\n\n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  function handleSubmit(e) {\n\t  e.preventDefault()\n\n\tsendEmail({message: state.message, plant: state.plant, to_name: state.name, from_name: state.sender, send_to: state.toEmail ,reply_to: state.replyEmail})\n\t// close modal\n\tsetOpen(false)\n  }\n\n\n  // EmailJS API so users can email eachother about their plants\n  async function sendEmail (variables) {\n\n\t// auth for email API hidden in .env -- need to request those from the server\n\tconst credentials = await emailAPI.getEmailAuth()\n\tawait window.emailjs.send(\n\t// plug in the email and template credentials\n  \tcredentials.email, credentials.template,\n  \tvariables\n  \t).then(res => {\n    \tconsole.log('Email successfully sent!')\n  \t})\n  \t// Handle errors here however you like, or use a React error boundary\n  \t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n  }\n  \n\treturn (\n\t\t<>\n\t\t<Modal.Header >Request this plant</Modal.Header>\n\t\t<Modal.Content>\n\t\t  <Modal.Description>\n\t\t\t<p><strong>Your Message to {post.user.username}</strong></p>\n\t\t\t<form className=\"message\">\n    \t\n\t\t\t<div>\n\t\t\t<textarea\n\t\t\t\tid=\"message\"\n\t\t\t\tname=\"message\"\n\t\t\t\tonChange={handleChange}\n\t\t\t\tplaceholder={`Hi ${post.user.username}, This is ${user.username}. When is a good time to pick up the plant? Thanks!`}\n\t\t\t\trequired\n\t\t\t\tvalue={state.message}\n\t\t\t\tstyle={{width: '100%', height: '150px'}}\n\t\t\t/>\n\t\t\t</div>\n\t\t\t\n  \t</form>\n\t\t  </Modal.Description>\n\t\t</Modal.Content>\n\t\t<Modal.Actions>\n\t\t  <Button color='grey' onClick={() => setOpen(false)}>\n\t\t\tCancel\n\t\t  </Button>\n\t\t  <Button\n\t\t\tcontent=\"Send Email\"\n\t\t\t\n\t\t\t\n\t\t\tonClick={handleSubmit}\n\t\t\tpositive\n\t\t  />\n\t\t</Modal.Actions>\n\t</>\n\t)\n  \n\n\n}\n\n","/Users/Thom/code/hardy-plant-society/src/utils/emailPostService.js",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/FormComponents/PlantSearchBar.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/FormComponents/PlantSearchResults.jsx",["204"],"import React, {useState, useEffect} from 'react'\nimport { Item } from 'semantic-ui-react'\nimport SearchItem from './SearchItem'\n\n\n\nexport default function DropdownExampleSelection(props){\n\n \n  const[results, setResults] = useState([]);\n\n\n\n  useEffect(() => {\n    if(props.trefleData){\n        let mappedData = props.trefleData.slice(0,5).map((result, index) => {\n          return(\n            <SearchItem  selected={props.selected === result.slug ? true : false} \n              handlePlantPick={props.handlePlantPick} \n              image={result.image_url} key={index} \n              text={result.common_name ? result.common_name + \" / \" + result.scientific_name : result.scientific_name} \n              value={result.slug} \n            />\n          )\n        });\n        \n        setResults(mappedData);\n        \n    }\n  }, [props.trefleData, props.selected]);\n  \n\n\n\n\n  return(\n    <>\n\n      <Item.Group>\n      {results}\n    </Item.Group>\n  </> \n  )\n  \n} \n  \n\n","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/FormComponents/SearchItem.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/FormComponents/RadioComponent.jsx",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":70,"column":1,"nodeType":"211","endLine":77,"endColumn":3},{"ruleId":"212","severity":1,"message":"213","line":8,"column":23,"nodeType":"214","messageId":"215","endLine":8,"endColumn":35},{"ruleId":"212","severity":1,"message":"213","line":8,"column":25,"nodeType":"214","messageId":"215","endLine":8,"endColumn":37},{"ruleId":"212","severity":1,"message":"216","line":18,"column":12,"nodeType":"214","messageId":"215","endLine":18,"endColumn":17},{"ruleId":"217","severity":1,"message":"218","line":44,"column":8,"nodeType":"219","endLine":44,"endColumn":10,"suggestions":"220"},{"ruleId":"212","severity":1,"message":"216","line":16,"column":12,"nodeType":"214","messageId":"215","endLine":16,"endColumn":17},{"ruleId":"212","severity":1,"message":"221","line":36,"column":19,"nodeType":"214","messageId":"215","endLine":36,"endColumn":23},{"ruleId":"217","severity":1,"message":"222","line":50,"column":8,"nodeType":"219","endLine":50,"endColumn":10,"suggestions":"223"},{"ruleId":"212","severity":1,"message":"224","line":5,"column":18,"nodeType":"214","messageId":"215","endLine":5,"endColumn":26},{"ruleId":"212","severity":1,"message":"221","line":17,"column":19,"nodeType":"214","messageId":"215","endLine":17,"endColumn":23},{"ruleId":"217","severity":1,"message":"225","line":37,"column":8,"nodeType":"219","endLine":37,"endColumn":10,"suggestions":"226"},{"ruleId":"209","severity":1,"message":"210","line":34,"column":3,"nodeType":"211","endLine":39,"endColumn":5},{"ruleId":"217","severity":1,"message":"227","line":66,"column":4,"nodeType":"219","endLine":66,"endColumn":14,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":8,"column":42,"nodeType":"231","endLine":8,"endColumn":102},{"ruleId":"217","severity":1,"message":"232","line":27,"column":8,"nodeType":"219","endLine":27,"endColumn":10,"suggestions":"233"},{"ruleId":"212","severity":1,"message":"234","line":1,"column":26,"nodeType":"214","messageId":"215","endLine":1,"endColumn":35},{"ruleId":"217","severity":1,"message":"235","line":30,"column":6,"nodeType":"219","endLine":30,"endColumn":40,"suggestions":"236"},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'setValidForm' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getShow'. Either include it or remove the dependency array.","ArrayExpression",["239"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProfile', 'location.pathname', and 'setIsAdminPost'. Either include them or remove the dependency array. If 'setIsAdminPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["240"],"'setAdmin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setIsAdminPost'. Either include it or remove the dependency array. If 'setIsAdminPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["241"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["242"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'plant.flowerImages' and 'plant.habitImages'. Either include them or remove the dependency array.",["243"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'props.handlePlantPick'. Either include it or remove the dependency array.",["244"],"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [getShow]",{"range":"257","text":"258"},"Update the dependencies array to be: [getProfile, location.pathname, setIsAdminPost]",{"range":"259","text":"260"},"Update the dependencies array to be: [setIsAdminPost]",{"range":"261","text":"262"},"Update the dependencies array to be: [selected, state]",{"range":"263","text":"264"},"Update the dependencies array to be: [plant.flowerImages, plant.habitImages]",{"range":"265","text":"266"},"Update the dependencies array to be: [props.trefleData, props.selected, props.handlePlantPick]",{"range":"267","text":"268"},[1217,1219],"[getShow]",[1667,1669],"[getProfile, location.pathname, setIsAdminPost]",[984,986],"[setIsAdminPost]",[1821,1831],"[selected, state]",[948,950],"[plant.flowerImages, plant.habitImages]",[826,860],"[props.trefleData, props.selected, props.handlePlantPick]"]