[{"/Users/Thom/code/hardy-plant-society/src/index.js":"1","/Users/Thom/code/hardy-plant-society/src/serviceWorker.js":"2","/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx":"3","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx":"4","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx":"5","/Users/Thom/code/hardy-plant-society/src/utils/userService.js":"6","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js":"7","/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx":"8","/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js":"9","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx":"10","/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx":"11","/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx":"12"},{"size":585,"mtime":1610919035047,"results":"13","hashOfConfig":"14"},{"size":5086,"mtime":1610734308620,"results":"15","hashOfConfig":"14"},{"size":1425,"mtime":1611025994845,"results":"16","hashOfConfig":"14"},{"size":2371,"mtime":1611026429275,"results":"17","hashOfConfig":"14"},{"size":1216,"mtime":1611008088032,"results":"18","hashOfConfig":"14"},{"size":1066,"mtime":1610999412746,"results":"19","hashOfConfig":"14"},{"size":312,"mtime":1610734308576,"results":"20","hashOfConfig":"14"},{"size":132,"mtime":1610734308575,"results":"21","hashOfConfig":"14"},{"size":925,"mtime":1610734308621,"results":"22","hashOfConfig":"14"},{"size":2853,"mtime":1611008088031,"results":"23","hashOfConfig":"14"},{"size":1852,"mtime":1611008088030,"results":"24","hashOfConfig":"14"},{"size":296,"mtime":1611026356259,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1pjlbbb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Thom/code/hardy-plant-society/src/index.js",[],["56","57"],"/Users/Thom/code/hardy-plant-society/src/serviceWorker.js",[],"/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx",["58","59"],"import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport userService from '../../utils/userService'\nimport AdminSignupPage from '../AdminSignupPage/AdminSignupPage';\n\nfunction App() {\n  // getUser decodes the JWT token into a javascript object\n  // this corresponds to the JWT payload defined in the server\n  // signup or login function-- const token = createJWT(user) -- where user is the document created from mongo\n  const [user, setUser] = useState(userService.getUser())\n\n// get the user from localstorage and decode the token\n  function handleSignUpOrLogin(){\n    setUser(userService.getUser()) \n  }\n\n  function handleLogout(){\n    userService.logout();\n    setUser({user: null});\n  }\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/\">\n              <h1>Home Page</h1>\n          </Route>\n          <Route exact path=\"/login\">\n             <LoginPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/signup\">\n             <SignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/admin\">\n             <AdminSignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx",["60"],"/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx",["61"],"import React, { useState, useRef, useEffect } from 'react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport { useForm } from '../../hooks/useForm';\nimport userService from '../../utils/userService';\n\nexport default function LoginPage(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('')\n    const [state, handleChange]       = useForm({\n        email: '',\n        password: '',\n    })\n  \n    const formRef = useRef();\n\n    useEffect(() => {\n      formRef.current.checkValidity() ? setValidForm(false) : setValidForm(true);\n    }, []);\n\n    return (\n        <>\n          <h1>Login</h1>\n          <form  autoComplete=\"off\" ref={formRef} onSubmit={async (e) => {\n            e.preventDefault()\n            \n            try {\n                await userService.login(state);\n                // Route to wherever you want!\n                alert(\"Logged in, time to go code where you want to go now! ~ Login Component!\")\n              } catch (err) {\n                // Invalid user data (probably duplicate email)\n                setError(err.message)\n              }\n          }}>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={ state.email}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                name=\"pw\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={ state.password}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn\"\n              disabled={invalidForm}\n            >\n              Login\n            </button>\n          </form>\n\n          {error ? <ErrorMessage error={error} /> : null}\n        </>\n      );\n}\n\n","/Users/Thom/code/hardy-plant-society/src/utils/userService.js",["62"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log(user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login\n};","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js",[],["63","64"],"/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js",["65"],"function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx",["66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":13,"column":10,"nodeType":"73","messageId":"74","endLine":13,"endColumn":14},{"ruleId":"71","severity":1,"message":"75","line":20,"column":12,"nodeType":"73","messageId":"74","endLine":20,"endColumn":24},{"ruleId":"71","severity":1,"message":"76","line":7,"column":23,"nodeType":"73","messageId":"74","endLine":7,"endColumn":35},{"ruleId":"71","severity":1,"message":"76","line":8,"column":25,"nodeType":"73","messageId":"74","endLine":8,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":44,"column":1,"nodeType":"79","endLine":49,"endColumn":3},{"ruleId":"67","replacedBy":"80"},{"ruleId":"69","replacedBy":"81"},{"ruleId":"77","severity":1,"message":"78","line":33,"column":3,"nodeType":"79","endLine":38,"endColumn":5},{"ruleId":"71","severity":1,"message":"82","line":5,"column":18,"nodeType":"73","messageId":"74","endLine":5,"endColumn":26},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'handleLogout' is defined but never used.","'setValidForm' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["83"],["84"],"'setAdmin' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]