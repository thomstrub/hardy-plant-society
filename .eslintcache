[{"/Users/Thom/code/hardy-plant-society/src/index.js":"1","/Users/Thom/code/hardy-plant-society/src/serviceWorker.js":"2","/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx":"3","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx":"4","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx":"5","/Users/Thom/code/hardy-plant-society/src/utils/userService.js":"6","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js":"7","/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx":"8","/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js":"9","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx":"10","/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx":"11","/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx":"12","/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx":"13","/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js":"14","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx":"15","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBar.jsx":"16","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchResults.jsx":"17","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBarV2.jsx":"18","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/RadioComponent.jsx":"19","/Users/Thom/code/hardy-plant-society/src/pages/PlantFeedPage/PlantFeedPage.jsx":"20","/Users/Thom/code/hardy-plant-society/src/components/PlantFeed/PlantFeed.jsx":"21","/Users/Thom/code/hardy-plant-society/src/components/PlantCard/PlantCard.jsx":"22","/Users/Thom/code/hardy-plant-society/src/pages/PlantPostCreatePage/PlantPostCreatePage.jsx":"23","/Users/Thom/code/hardy-plant-society/src/pages/PlantDetailPage/PlantDetailPage.jsx":"24","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantShowCard.jsx":"25","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantDetailsCard.jsx":"26","/Users/Thom/code/hardy-plant-society/src/components/DetailsList/DetailsList.jsx":"27","/Users/Thom/code/hardy-plant-society/src/components/Carousel/Carousel.jsx":"28","/Users/Thom/code/hardy-plant-society/src/pages/ProfilePage/ProfilePage.jsx":"29","/Users/Thom/code/hardy-plant-society/src/components/ProfileSection/ProfileSection.jsx":"30","/Users/Thom/code/hardy-plant-society/src/components/Header/Header.jsx":"31","/Users/Thom/code/hardy-plant-society/src/pages/AdminPostCreatePage/AdminPostCreatePage.jsx":"32","/Users/Thom/code/hardy-plant-society/src/components/Forms/AdminPostForm/AdminPostForm.jsx":"33","/Users/Thom/code/hardy-plant-society/src/utils/adminPostService.js":"34","/Users/Thom/code/hardy-plant-society/src/pages/HomePage/HomePage.jsx":"35","/Users/Thom/code/hardy-plant-society/src/components/AdminPostFeed/AdminPostFeed.jsx":"36","/Users/Thom/code/hardy-plant-society/src/components/AdminPostCard/AdminPostCard.jsx":"37","/Users/Thom/code/hardy-plant-society/src/components/EmailModal/EmailModal.jsx":"38","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart1.jsx":"39","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart2.jsx":"40","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/SearchItem.jsx":"41","/Users/Thom/code/hardy-plant-society/src/components/Forms/EmailForm/EmailForm.jsx":"42"},{"size":585,"mtime":1610919035047,"results":"43","hashOfConfig":"44"},{"size":5086,"mtime":1610734308620,"results":"45","hashOfConfig":"44"},{"size":3692,"mtime":1611547851114,"results":"46","hashOfConfig":"44"},{"size":2816,"mtime":1611032341156,"results":"47","hashOfConfig":"44"},{"size":1216,"mtime":1611008088032,"results":"48","hashOfConfig":"44"},{"size":1375,"mtime":1611463776941,"results":"49","hashOfConfig":"44"},{"size":312,"mtime":1610734308576,"results":"50","hashOfConfig":"44"},{"size":138,"mtime":1611277467964,"results":"51","hashOfConfig":"44"},{"size":925,"mtime":1611294592048,"results":"52","hashOfConfig":"44"},{"size":3459,"mtime":1611519472584,"results":"53","hashOfConfig":"44"},{"size":1859,"mtime":1611518547645,"results":"54","hashOfConfig":"44"},{"size":296,"mtime":1611026356259,"results":"55","hashOfConfig":"44"},{"size":287,"mtime":1611100192528,"results":"56","hashOfConfig":"44"},{"size":1638,"mtime":1611599280284,"results":"57","hashOfConfig":"44"},{"size":5471,"mtime":1611638048444,"results":"58","hashOfConfig":"44"},{"size":873,"mtime":1611638824552,"results":"59","hashOfConfig":"44"},{"size":950,"mtime":1611636880727,"results":"60","hashOfConfig":"44"},{"size":3055,"mtime":1611209438791,"results":"61","hashOfConfig":"44"},{"size":659,"mtime":1611255868880,"results":"62","hashOfConfig":"44"},{"size":1112,"mtime":1611518070530,"results":"63","hashOfConfig":"44"},{"size":540,"mtime":1611599054070,"results":"64","hashOfConfig":"44"},{"size":1970,"mtime":1611611598284,"results":"65","hashOfConfig":"44"},{"size":1050,"mtime":1611532650531,"results":"66","hashOfConfig":"44"},{"size":2396,"mtime":1611532227657,"results":"67","hashOfConfig":"44"},{"size":665,"mtime":1611535501738,"results":"68","hashOfConfig":"44"},{"size":1157,"mtime":1611462454365,"results":"69","hashOfConfig":"44"},{"size":160,"mtime":1611541945918,"results":"70","hashOfConfig":"44"},{"size":1337,"mtime":1611461376520,"results":"71","hashOfConfig":"44"},{"size":3079,"mtime":1611599234681,"results":"72","hashOfConfig":"44"},{"size":753,"mtime":1611538803223,"results":"73","hashOfConfig":"44"},{"size":3077,"mtime":1611549862758,"results":"74","hashOfConfig":"44"},{"size":1561,"mtime":1611543591034,"results":"75","hashOfConfig":"44"},{"size":2329,"mtime":1611544195544,"results":"76","hashOfConfig":"44"},{"size":753,"mtime":1611556383670,"results":"77","hashOfConfig":"44"},{"size":1287,"mtime":1611556978018,"results":"78","hashOfConfig":"44"},{"size":616,"mtime":1611556912334,"results":"79","hashOfConfig":"44"},{"size":1091,"mtime":1611597849628,"results":"80","hashOfConfig":"44"},{"size":1340,"mtime":1611639550647,"results":"81","hashOfConfig":"44"},{"size":698,"mtime":1611638399788,"results":"82","hashOfConfig":"44"},{"size":2905,"mtime":1611640222385,"results":"83","hashOfConfig":"44"},{"size":623,"mtime":1611638485280,"results":"84","hashOfConfig":"44"},{"size":1908,"mtime":1611639664542,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1pjlbbb",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Thom/code/hardy-plant-society/src/index.js",[],["193","194"],"/Users/Thom/code/hardy-plant-society/src/serviceWorker.js",[],"/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx",["195","196","197"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport * as plantPostAPI from '../../utils/plantPostService'\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport userService from '../../utils/userService'\nimport AdminSignupPage from '../AdminSignupPage/AdminSignupPage';\nimport PlantPostCreatePage from '../PlantPostCreatePage/PlantPostCreatePage';\nimport PlantFeedPage from '../PlantFeedPage/PlantFeedPage';\nimport PlantDetailPage from '../PlantDetailPage/PlantDetailPage'\nimport ProfilePage from '../ProfilePage/ProfilePage'\nimport AdminPostCreatePage from '../AdminPostCreatePage/AdminPostCreatePage'\nimport HomePage from '../HomePage/HomePage'\n\nfunction App() {\n  // getUser decodes the JWT token into a javascript object\n  // this corresponds to the JWT payload defined in the server\n  // signup or login function-- const token = createJWT(user) -- where user is the document created from mongo\n  const [user, setUser] = useState(userService.getUser())\n\n// get the user from localstorage and decode the token\n  function handleSignUpOrLogin(){\n    setUser(userService.getUser()) \n  }\n\n  function handleLogout(){\n    userService.logout();\n    setUser({user: null});\n  }\n\n  \n  const [loading, setLoading] = useState(false);\n  \n  async function handleAddPost(post){\n      setLoading(true);\n      const data = await plantPostAPI.create(post);\n\n      // to check to make sure this is working\n      console.log(data, ' data')\n      // data is the response from our create function in controllers/posts\n      // update the state\n      setLoading(false);\n      // setPosts([data.post,  ...posts])\n      // to conifrm this check the devtools for your feed component\n      \n  }\n\n\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/\">\n              <HomePage user={user} />\n          </Route>\n          \n          \n          <Route exact path=\"/login\">\n             <LoginPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/signup\">\n             <SignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/admin\">\n             <AdminSignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/admin/posts/new\">\n              {userService.getUser()?\n                <AdminPostCreatePage user={user} handleAddPost={handleAddPost} loading={loading} setLoading={setLoading} user={user} handleLogout={handleLogout}/>\n              :\n                <Redirect to='/login'/>\n              }\n                  \n          </Route>\n          <Route exact path=\"/plantswap/\">\n              <PlantFeedPage user={user} handleLogout={handleLogout}/>\n          </Route>\n          <Route exact path=\"/plantswap/new\">\n              {userService.getUser()?\n                <PlantPostCreatePage user={user} handleAddPost={handleAddPost} loading={loading} user={user} handleLogout={handleLogout}/>\n              :\n                <Redirect to='/login'/>\n              }\n                  \n          </Route>\n          <Route path=\"/plantswap/:id\">\n                  <PlantDetailPage user={user} handleLogout={handleLogout}/>\n          </Route>\n                \n          <Route path=\"/:username\">\n            \n            {userService.getUser()?\n              <ProfilePage user={user} handleLogout={handleLogout}/>\n              :\n                <Redirect to='/login'/>\n              }\n          </Route>   \n                \n                \n        \n         \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx",["198"],"import React, { useState } from 'react';\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\nimport SignupForm from '../../components/Forms/SignupForm/SignupForm'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\n\nexport default function SignUpPage(props){\n  const [invalidForm, setValidForm] = useState(false)\n  const [error, setError ] = useState('')\n  const [selectedFile, setSelectedFile] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [state, setState]  = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n    bio: '',\n    isAdmin: props.admin ? true : false,\n    adminPw:\"\"\n  });\n\n  const history = useHistory()\n  \n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async function handleSubmit(e){\n    // add this later\n    e.preventDefault();\n    setLoading(true);\n    if(props.admin && state.adminPw !== \"felco2\"){\n      setError(\"Wrong credentials\")\n      console.log(error)\n    } else{\n    // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n\n      const formData = new FormData();\n      formData.append('photo', selectedFile);\n\n\n      // generating rest of form data by looping over the state object!\n      for (let key in state){\n        formData.append(key, state[key])\n      }\n      //fyi if you log out formData you won't see anything you have to use the folllowing\n\n      // Display the key/value pairs\n      // for (var pair of formData.entries()) {\n      //   console.log(pair[0]+ ', ' + pair[1]); \n      // }\n\n      // SO now we have are data prepared to send over in our formData object\n      try {\n        // refere to the utils/userService, to look at the signup fetch function\n        await userService.signup(formData);\n        // setTheUser in our app\n        props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\n        // with the correct user object from the current token\n        // then route to the homepage\n        setLoading(false);\n        history.push('/') // defined above from react-router-dom\n        // after this we can go whereever\n\n      } catch(err){\n        console.log(err.message)\n        setError(err.message)\n      }\n    }\n  }\n\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n \n    \n    return (\n      <>\n        {loading ?\n        <LoadingMsg />\n        :\n        <SignupForm \n          handleChange={handleChange} \n          handleSubmit={handleSubmit} \n          handleFileInput={handleFileInput}\n          state={state}\n          error={error}\n          invalidForm={invalidForm}\n        />\n        }\n        \n      </>\n      );   \n    \n}\n","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx",["199"],"import React, { useState } from 'react';\nimport './LoginPage.css';\nimport { useHistory } from 'react-router-dom';\nimport userService from '../../utils/userService';\nimport LoginForm from '../../components/Forms/LoginForm/LoginForm'\n\nexport default function LoginPage(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('')\n    const [state, setState]       = useState({\n        email: '',\n        password: '',\n    })\n  \n    const history = useHistory();\n    \n    function handleChange(e){\n      setState({\n        ...state,\n        [e.target.name]: e.target.value\n      })\n    }\n   \n    \n\n    async function handleSubmit(e){\n      e.preventDefault()\n              \n      try {\n          await userService.login(state);\n          // Route to wherever you want!\n          props.handleSignUpOrLogin() // \n          history.push('/')\n          \n        } catch (err) {\n          // Invalid user data (probably duplicate email)\n          setError(err.message)\n        }\n    }\n\n    return (\n        <>\n          <LoginForm handleSubmit={handleSubmit} handleChange={handleChange} state={state} error={error} invalidForm={invalidForm}/>\n        </>\n      );\n}\n\n","/Users/Thom/code/hardy-plant-society/src/utils/userService.js",["200"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log(user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction getProfile(username){\n  return fetch(BASE_URL + username, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  }).then(res => {\n    if(res.ok) return res.json()\n    throw new Error('User does not exist') // This is the error in our try catch(err)\n  })\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login,\n  getProfile\n};","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js",[],["201","202"],"/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js",["203"],"function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx",["204"],"import React, { useState } from 'react'\nimport SignupPage from '../SignupPage/SignupPage'\n\nexport default function AdminSignupPage({handleSignUpOrLogin}){\n    const[admin, setAdmin] = useState(true)\n    return(\n        <SignupPage handleSignUpOrLogin={handleSignUpOrLogin} admin={admin}/>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx",["205"],"import React from 'react'\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\n\nconst Loading = () => (\n  <div>\n\n    <Segment>\n      <Dimmer active inverted>\n        <Loader inverted>Loading</Loader>\n      </Dimmer>\n\n      \n    </Segment>\n  </div>\n)\n\nexport default Loading","/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx",["206","207","208","209","210","211","212"],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBar.jsx",["213"],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchResults.jsx",["214","215"],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBarV2.jsx",["216","217","218"],"import React, {useState, useEffect} from 'react'\nimport { Search, Grid, Header, Segment, Label, Image } from 'semantic-ui-react'\n\n\n\nconst initialState = {\n  loading: false,\n  results: [],\n  value: '',\n  searchTag: ''\n}\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CLEAN_QUERY':\n      return initialState\n    case 'START_SEARCH':\n      return { ...state, loading: true, value: action.query, searchTag: action.query }\n    case 'FINISH_SEARCH':\n      return { ...state, loading: false, results: action.results }\n    case 'UPDATE_SELECTION':\n      return { ...state, value: action.selection }\n\n    default:\n      throw new Error()\n  }\n}\n\nconst resultRenderer = ({ common_name, image_url }) => <><Label content={common_name} /><Image src={image_url}/></>\n\nfunction SearchExampleStandardCustom() {\n  const [state, dispatch] = React.useReducer(exampleReducer, initialState)\n  const { loading, results, value, searchTag } = state\n\n  const timeoutRef = React.useRef()\n  const handleSearchChange = React.useCallback((e, data) => {\n    clearTimeout(timeoutRef.current)\n    dispatch({ type: 'START_SEARCH', query: data.value })\n\n    timeoutRef.current = setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({ type: 'CLEAN_QUERY' })\n        return\n      }\n\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: trefleData,\n      })\n    }, 300)\n  }, [])\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current)\n    }\n  }, [])\n\n   // Trefle API variables\n   const KEY = process.env.TREFLETOKEN;\n   const TREFLE_BASE_URL = `https://trefle.io/api/v1/plants/search?token=nGl9aJhLyHSPDXgy_7THrf3UycmVNDpcU4kvluaWwZQ&q=`;\n \n   // Trefle API data\n   const [trefleData, setTrefleData] = useState(\"\");\n \n   // Trefle API Call\n   useEffect(() => {\n     const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n     console.log(searchTag, \"useEffect searchTag\");\n     const trefleUrl = `${TREFLE_BASE_URL}${searchTag}`;\n     fetch(proxyurl + trefleUrl)\n       .then((res) => res.json())\n       .then((data) => {\n         console.log(data.data, \"json data\");\n         setTrefleData(data.data);\n       });\n   }, [searchTag]);\n\n  return (\n    <Grid>\n      <Grid.Column width={6}>\n        <Search\n          loading={loading}\n          onResultSelect={(e, data) =>\n            dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\n          }\n          onSearchChange={handleSearchChange}\n          resultRenderer={resultRenderer}\n          results={trefleData}\n          value={value}\n        />\n      </Grid.Column>\n\n      <Grid.Column width={10}>\n        <Segment>\n          <Header>State</Header>\n          <pre style={{ overflowX: 'auto' }}>\n            {JSON.stringify({ loading, results, value }, null, 2)}\n          </pre>\n          <Header>Options</Header>\n          <pre style={{ overflowX: 'auto' }}>\n            {JSON.stringify(trefleData, null, 2)}\n          </pre>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default SearchExampleStandardCustom",["219","220"],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/RadioComponent.jsx",["221"],"import React, { Component } from 'react'\nimport { Form, Radio } from 'semantic-ui-react'\n\nexport default function RadioComponent(props) {\n  \n\n    return (\n      <>\n        <Form.Field>\n          <Radio\n            label='Rootstock'\n            name='radioGroup'\n            value='isRootstock'\n            checked={props.toggle}\n            onChange={props.handleChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Radio\n            label='Seed'\n            name='radioGroup'\n            value='isSeed'\n            checked={!props.toggle}\n            onChange={props.handleChange}\n          />\n        </Form.Field>\n      </>\n    )\n  }\n","/Users/Thom/code/hardy-plant-society/src/pages/PlantFeedPage/PlantFeedPage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantFeed/PlantFeed.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantCard/PlantCard.jsx",["222","223"],"import React from 'react';\nimport { Card, Icon, Image, Feed, Button, Header } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport EmailModal from '../EmailModal/EmailModal'\n\nfunction PlantCard({post, isProfile, user, deletePost}) { \n\n\n\n  function returnButton(){\n      if(isProfile){\n        return(<Button onClick={() => {deletePost(post._id)}}>Delete</Button>)\n      } else {\n       if(post.user._id === user._id){\n        return (\"\")\n       } else {return (<EmailModal post={post} user={user}/>)}\n            \n      }\n  }\n\n\n  return (\n    <Card color=\"green\" key={post._id}>\n     \n      <Image src={`${post.photoUrl}`} wrapped ui={false} />\n\n      {isProfile ? ''\n        :  \n        <Link to={`/${user.username}`}>\n          <Card.Content >\n          \n            <Card.Header >\n              <Header floated=\"left\">\n                <Image\n                    floated='left'\n                    size='large'\n                    verticalAlign='middle'\n                    avatar\n                    src={post.user.photoUrl ? post.user.photoUrl : 'https://react.semantic-ui.com/images/wireframe/square-image.png'}\n                />\n                {post.user.username}\n              </Header>\n              <Header color=\"orange\" floated=\"right\">\n                {post.forSale ? \"$5\" : \"\"}\n              </Header>\n              \n              </Card.Header>\n              \n          </Card.Content>\n        </Link>\n      }\n      <Card.Content extra textAlign={'left'}>\n      \n      <Card.Header as={Link} to={`/plantswap/${post._id}`}>\n      \n        {post.plant.species} <br/>\n        \"{post.plant.commonName}\"\n      \n        </Card.Header>\n         \n      \n      \n      \n        <Card.Description>\n           <p>{post.description}</p> \n        </Card.Description>\n      \n      \n      </Card.Content>\n      <Card.Content textAlign=\"center\">\n         {returnButton()}\n          \n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default PlantCard;","/Users/Thom/code/hardy-plant-society/src/pages/PlantPostCreatePage/PlantPostCreatePage.jsx",["224"],"import React, { useState } from 'react';\nimport './PlantPostCreatePage.css';\nimport PlantPostForm from '../../components/Forms/PlantPostForm/PlantPostForm'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\nimport Header from '../../components/Header/Header'\nimport {  Grid } from 'semantic-ui-react'\n\n// create PlantPost service folder, add functions\n\nexport default function PlantPostPage({handleAddPost, handleLogout, user, loading}){\n \n\n\n    return (\n        <>\n            <Grid centered >\n            <Grid.Row>\n            <Grid.Column>\n                <Header user={user} handleLogout={handleLogout}/>\n            </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n            <Grid.Column style={{ maxWidth: 750 }}>\n                {loading ?\n                    <LoadingMsg />\n                    :\n                    \n                    <PlantPostForm handleAddPost={handleAddPost} user={user}/>\n                }\n            </Grid.Column>\n            </Grid.Row>\n        </Grid>\n            \n        </>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/pages/PlantDetailPage/PlantDetailPage.jsx",["225","226","227","228"],"import React, { useState, useEffect } from 'react';\nimport { Grid, Image } from 'semantic-ui-react'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\nimport * as plantPostService from '../../utils/plantPostService'\n\nimport PlantShowCard from '../../components/PlantShow/PlantShowCard'\nimport Header from '../../components/Header/Header'\n\n\nimport { useLocation } from 'react-router-dom';\nimport PlantDetailsCard from '../../components/PlantShow/PlantDetailsCard';\n\nexport default function PlantDetailPage({ user, handleLogout }) {\n\n    const [post, setPost] = useState({})\n    // const [profileUser, setProfileUser] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n\n    const location = useLocation()\n    console.log(location.pathname.substring(1))\n\n    async function getShow() {\n\n        try {\n\n            // *HARDCODED* substring(10) returns the pathname after /plantswap specifically.\n            const plantDetail = location.pathname.substring(10)\n          \n            console.log(plantDetail)\n            const data = await plantPostService.getOne(plantDetail);\n            console.log(data, \"<--------- data from getShow\")\n            \n            setPost(data.post)\n            setLoading(() => false)\n        } catch (err) {\n            console.log(err)\n            setError(err)\n        }\n    }\n\n\n    \n\n\n    useEffect(() => {\n        getShow()\n\n    }, [])\n\n\n\n    return (\n\n        <>\n            { loading ?\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle' >\n                \n                        <Grid.Column style={{ maxWidth: 750}}>\n                            \n                                <LoadingMsg />\n                         \n                        </Grid.Column>\n                 \n                </Grid>\n                :\n                <Grid centered>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header user={user} handleLogout={handleLogout}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column style={{maxWidth: 800}}>\n                            <PlantShowCard post={post}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }\n        </>\n    )\n}\n","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantShowCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantDetailsCard.jsx",["229"],"import React from 'react'\nimport { Grid, Image, Segment } from 'semantic-ui-react'\nimport DetailsList from '../DetailsList/DetailsList'\nimport Carousel from '../Carousel/Carousel'\n\n\nconst PlantDetailsCard = ({post}) => (\n\n  <Grid columns={2} divided>\n    <Grid.Row>\n      <Grid.Column width=\"10\">\n\n      <Segment raised>\n            <h2>{post.plant.species}</h2>\n            <h3>{post.plant.commonName}</h3>\n        \n            <p>{post.plant.description}</p>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column width=\"6\">\n        <Segment raised>\n            {/* <Image src={post.plant.photoUrl} /> */}\n            <Carousel plant={post.plant}/>\n        </Segment>\n      </Grid.Column>\n    </Grid.Row>\n    <Grid.Row>\n      <Grid.Column >\n      <Segment >\n            <h3>Other common names for this species: </h3>\n            <DetailsList list={post.plant.otherCommonNames}/>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column >\n        <Segment >\n            <h3>Native to: </h3>\n            <DetailsList list={post.plant.distribution}/>\n        </Segment>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n\n)\n\nexport default PlantDetailsCard","/Users/Thom/code/hardy-plant-society/src/components/DetailsList/DetailsList.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Carousel/Carousel.jsx",["230","231","232"],"import React, {useState, useEffect} from 'react';\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport { Image } from 'semantic-ui-react'\n\nfunction returnImages(images){\n    const imageElems = images.map((image, idx) => {\n        return(\n            <Slide key={idx} index={idx}><img src={image}/></Slide>\n        )\n    });\n    return(imageElems);\n}\n\nexport default function Carousel({plant}) {\n    \n    const [images, setImages] = useState([]);\n    console.log(plant.flowerImages.concat(plant.habitImages), \"image array\")\n    useEffect(() => {\n        const flowers = plant.flowerImages.map((flower) =>{\n            return(flower.image_url)\n        })\n        const plantImages = plant.habitImages.map((plantImage) =>{\n            return(plantImage.image_url)\n        })\n        setImages(returnImages(flowers.concat(plantImages)));\n    }, [])\n    console.log(images, \"images\")\n    \n      return (\n        <CarouselProvider\n          naturalSlideWidth={100}\n          naturalSlideHeight={125}\n          totalSlides={images.length}\n        >\n          <Slider>\n          {images}\n          \n        </Slider>\n        <ButtonBack>Back</ButtonBack>\n        <ButtonNext>Next</ButtonNext>\n        </CarouselProvider>\n      );\n    \n  }\n","/Users/Thom/code/hardy-plant-society/src/pages/ProfilePage/ProfilePage.jsx",["233","234","235","236","237","238"],"import React, { useState, useEffect } from 'react';\nimport { Grid, Segment, Dimmer, Loader } from 'semantic-ui-react'\nimport userService from '../../utils/userService';\nimport ProfileSection from '../../components/ProfileSection/ProfileSection';\nimport PlantFeed from '../../components/PlantFeed/PlantFeed';\nimport Header from '../../components/Header/Header'\nimport { useLocation } from 'react-router-dom';\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\nimport * as plantPostAPI from '../../utils/plantPostService'\n\nexport default function ProfilePage({ user, handleLogout }) {\n\n    const [posts, setPosts] = useState([])\n    const [profileUser, setProfileUser] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n\n    const location = useLocation()\n    console.log(location, \"location\")\n\n    async function getProfile() {\n        \n        try {\n\n            const username = location.pathname.substring(1)\n            // location.pathname returns /jimbo so we need to cut off the / using the js method substring\n            // This gets the username from the url! \n            console.log(username, \"<--------------username!!!\")\n            const data = await userService.getProfile(username);\n            console.log(data)\n            setLoading(() => false)\n            setPosts(() => [...data.posts])\n            setProfileUser(() => data.user)\n        } catch (err) {\n            console.log(err)\n            setError(err)\n        }\n    }\n\n    async function deletePost(postId) {\n        try {\n            const data = await plantPostAPI.removePost(postId);\n            getProfile();\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    useEffect(() => {\n        if (location.pathname.substring(1) !== \"plantswap\")\n        getProfile()\n\n    }, [])\n\n\n\n    return (\n\n        <>\n            { loading ?\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle' >\n                \n                        <Grid.Column style={{ maxWidth: 450}}>\n                            \n                                <LoadingMsg/>\n                         \n                        </Grid.Column>\n                 \n                </Grid>\n                :\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header user={user} handleLogout={handleLogout}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <ProfileSection user={profileUser} />\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row centered>\n                        <Grid.Column style={{ maxWidth: 1050 }}>\n                            <PlantFeed isProfile={true} posts={posts} numPhotosCol={3} user={user} deletePost={deletePost}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }\n        </>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/ProfileSection/ProfileSection.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Header/Header.jsx",["239"],"import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { Header, Segment, Image, Icon, List, Grid } from 'semantic-ui-react';\nimport './Header.css'\n\nexport default function PageHeader({user, handleLogout}){\n    return (\n        <Segment clearing>\n        <Grid centered>\n        <Grid.Row>\n            <Grid.Column style={{ maxWidth: 1150}}>\n                <Header color=\"green\" as='h3' floated=\"left\" >\n                    \n                    <Link className=\"link\" to=\"/\"><Icon className=\"link\" name=\"leaf\"></Icon></Link>\n                    \n                </Header>\n                <Header  floated=\"right\" className=\"nav-container\" >\n                <List className=\"nav\" horizontal>\n                   \n                    \n                    {user ?\n                        <>\n                        {user.isAdmin ?\n                        <List.Item className=\"nav-item\">\n                            <Header as='h3'>\n                                    <Link style={{color: \"orange\"}}className=\"link\" to='/admin/posts/new'>New Admin Post</Link>\n                            </Header>\n                        </List.Item>\n                        :\n                        ''\n                        }\n                        <List.Item className=\"nav-item\">\n                            <Header as='h3'>\n                                \n                                <Link className=\"link\" to='/plantswap/new'>{user.isAdmin ? \"Post a Plant\" : \"Donate a Plant\"}</Link>\n                                \n                            </Header>\n                        </List.Item>\n                        <List.Item className=\"nav-item\">\n                            <Header as='h3'>\n                                <Link className=\"link\" to='/plantswap'>Find a Plant</Link>\n                            </Header>\n                        </List.Item>\n                        <List.Item className=\"nav-item\">\n                            <Header as='h3'>\n                                <Link className=\"link\" as='h3' to={`/${user.username}`}> Profile </Link>\n                            </Header>\n                        </List.Item>\n                        <List.Item className=\"nav-item\">\n                            <Header as='h3'>\n                                <Link className=\"link\" to='/login'onClick={handleLogout}>Logout</Link>\n                            </Header>\n                        </List.Item>\n                        </>\n                        :\n                        <List.Item className=\"nav-item\">\n                            <Header as='h3'>\n                                <Link className=\"link\" to='/login'>Login</Link>\n                                    \n                            </Header>\n                        </List.Item>\n                        }\n                        \n                    \n                </List>\n                        \n                </Header>\n                \n            </Grid.Column>\n        </Grid.Row>\n            \n\n        </Grid>\n            \n            \n        </Segment>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/pages/AdminPostCreatePage/AdminPostCreatePage.jsx",["240","241"],"import React, { useState } from 'react';\nimport * as AdminPostAPI from '../../utils/adminPostService'\nimport AdminPostForm from '../../components/Forms/AdminPostForm/AdminPostForm'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\nimport Header from '../../components/Header/Header'\nimport {  Grid } from 'semantic-ui-react'\n\n// create PlantPost service folder, add functions\n\nexport default function AdminPostCreatePage({handleAddPost, handleLogout, user, loading, setLoading}){\n \n    async function handleAddPost(post){\n        setLoading(true);\n        const data = await AdminPostAPI.create(post);\n  \n        // to check to make sure this is working\n        console.log(data, ' data')\n        // data is the response from our create function in controllers/posts\n        // update the state\n        setLoading(false);\n        // setPosts([data.post,  ...posts])\n        // to conifrm this check the devtools for your feed component\n        \n    }\n\n    return (\n        <>\n            <Grid centered >\n            <Grid.Row>\n            <Grid.Column>\n                <Header user={user} handleLogout={handleLogout}/>\n            </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n            <Grid.Column style={{ maxWidth: 750 }}>\n                {loading ?\n                    <LoadingMsg />\n                    :\n                    \n                    <AdminPostForm handleAddPost={handleAddPost} user={user}/>\n                }\n            </Grid.Column>\n            </Grid.Row>\n        </Grid>\n            \n        </>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/Forms/AdminPostForm/AdminPostForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/adminPostService.js",[],"/Users/Thom/code/hardy-plant-society/src/pages/HomePage/HomePage.jsx",["242"],"import React, { useState, useEffect } from 'react';\n\nimport AdminPostFeed from '../../components/AdminPostFeed/AdminPostFeed';\nimport PageHeader from '../../components/Header/Header'\nimport {  Grid } from 'semantic-ui-react'\nimport * as adminPostAPI from '../../utils/adminPostService'\n\nexport default function Feed({user, handleLogout}){  \n\n\n      \n    const [posts, setPosts] = useState([]);\n\n\n    async function removePost(postId) {\n        try {\n            const data = await adminPostAPI.removePost(postId);\n            getPosts();\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    async function getPosts(){\n    \n    try {\n      const data = await adminPostAPI.getAll();\n      setPosts([...data.posts])\n    } catch(err){\n      console.log(err, ' this is the error')\n    }\n    }  \n\n    useEffect(() => {\n        getPosts()\n    }, [])\n    \n\n\n\n    return (\n        \n      <Grid centered >\n        <Grid.Row>\n          <Grid.Column>\n            <PageHeader user={user} handleLogout={handleLogout}/>\n          </Grid.Column>\n        </Grid.Row>\n        \n        <Grid.Row>\n        <Grid.Column style={{maxWidth: 1050}}>\n          <AdminPostFeed posts={posts} user={user} removePost={removePost}/>\n        </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/AdminPostFeed/AdminPostFeed.jsx",["243"],"import React from 'react'\nimport { Image, Item } from 'semantic-ui-react'\nimport AdminPostCard from '../AdminPostCard/AdminPostCard'\n\nexport default function AdminPostFeed({posts, removePost, user}){\n\n    \n\n    return(\n        <>\n        <h2 style={{color:\"orange\"}}>Hardy Plant Society News</h2>\n        <Item.Group>\n            {posts.map((post) => {\n                            return ( \n                                    <AdminPostCard post={post} key={post._id} removePost={removePost} user={user} />\n                                )\n                            })}\n      </Item.Group>\n      </>\n    )\n\n} \n\n\n","/Users/Thom/code/hardy-plant-society/src/components/AdminPostCard/AdminPostCard.jsx",["244","245","246"],"import React from 'react'\nimport { Image, Item, Header } from 'semantic-ui-react'\nimport {Link} from 'react-router-dom';\n\nimport './AdminPostCard.css'\n\n\nexport default function AdminPostFeed({post, removePost, user}){\n\n    const handleClick = () => removePost(post._id);\n\n    return(\n       \n        <Item>\n          <Item.Image size='small' src={post.photoUrl} />\n    \n          <Item.Content>\n            <Item.Header  >\n            <div className=\"space\">\n                <span>{post.title}</span>\n                {user.isAdmin ? \n                    <span  style={{color: \"darkred\"}} onClick={handleClick}>X</span>\n                :\n                    \"\"\n                }\n                \n            </div>\n                    \n                \n            \n            </Item.Header>\n            <Item.Meta>{post.date}</Item.Meta>\n            <Item.Description>\n              <p>{post.body}</p>\n            </Item.Description>\n            <Item.Extra>{post.user ? post.user.username : \"HPS Admin\"}</Item.Extra>\n          </Item.Content>\n        </Item>\n    \n        \n      \n    )\n\n} ","/Users/Thom/code/hardy-plant-society/src/components/EmailModal/EmailModal.jsx",["247","248"],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart1.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostFormPart2.jsx",["249"],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/SearchItem.jsx",["250","251"],"/Users/Thom/code/hardy-plant-society/src/components/Forms/EmailForm/EmailForm.jsx",["252","253"],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":1,"column":27,"nodeType":"260","messageId":"261","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"263","line":69,"column":122,"nodeType":"264","endLine":69,"endColumn":133},{"ruleId":"262","severity":1,"message":"263","line":80,"column":98,"nodeType":"264","endLine":80,"endColumn":109},{"ruleId":"258","severity":1,"message":"265","line":8,"column":23,"nodeType":"260","messageId":"261","endLine":8,"endColumn":35},{"ruleId":"258","severity":1,"message":"265","line":8,"column":25,"nodeType":"260","messageId":"261","endLine":8,"endColumn":37},{"ruleId":"266","severity":1,"message":"267","line":55,"column":1,"nodeType":"268","endLine":61,"endColumn":3},{"ruleId":"254","replacedBy":"269"},{"ruleId":"256","replacedBy":"270"},{"ruleId":"266","severity":1,"message":"267","line":33,"column":3,"nodeType":"268","endLine":38,"endColumn":5},{"ruleId":"258","severity":1,"message":"271","line":5,"column":18,"nodeType":"260","messageId":"261","endLine":5,"endColumn":26},{"ruleId":"258","severity":1,"message":"272","line":2,"column":26,"nodeType":"260","messageId":"261","endLine":2,"endColumn":31},{"ruleId":"258","severity":1,"message":"273","line":1,"column":38,"nodeType":"260","messageId":"261","endLine":1,"endColumn":44},{"ruleId":"258","severity":1,"message":"274","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":16},{"ruleId":"258","severity":1,"message":"275","line":2,"column":24,"nodeType":"260","messageId":"261","endLine":2,"endColumn":29},{"ruleId":"258","severity":1,"message":"276","line":33,"column":10,"nodeType":"260","messageId":"261","endLine":33,"endColumn":21},{"ruleId":"258","severity":1,"message":"277","line":33,"column":23,"nodeType":"260","messageId":"261","endLine":33,"endColumn":37},{"ruleId":"278","severity":1,"message":"279","line":79,"column":6,"nodeType":"280","endLine":79,"endColumn":18,"suggestions":"281"},{"ruleId":"278","severity":1,"message":"282","line":89,"column":4,"nodeType":"280","endLine":89,"endColumn":14,"suggestions":"283"},{"ruleId":"258","severity":1,"message":"284","line":2,"column":24,"nodeType":"260","messageId":"261","endLine":2,"endColumn":31},{"ruleId":"258","severity":1,"message":"285","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":18},{"ruleId":"278","severity":1,"message":"286","line":25,"column":6,"nodeType":"280","endLine":25,"endColumn":40,"suggestions":"287"},{"ruleId":"278","severity":1,"message":"288","line":51,"column":6,"nodeType":"280","endLine":51,"endColumn":8,"suggestions":"289"},{"ruleId":"258","severity":1,"message":"290","line":59,"column":10,"nodeType":"260","messageId":"261","endLine":59,"endColumn":13},{"ruleId":"278","severity":1,"message":"291","line":76,"column":7,"nodeType":"280","endLine":76,"endColumn":18,"suggestions":"292"},{"ruleId":"254","replacedBy":"293"},{"ruleId":"256","replacedBy":"294"},{"ruleId":"258","severity":1,"message":"295","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":26},{"ruleId":"258","severity":1,"message":"296","line":2,"column":16,"nodeType":"260","messageId":"261","endLine":2,"endColumn":20},{"ruleId":"258","severity":1,"message":"297","line":2,"column":29,"nodeType":"260","messageId":"261","endLine":2,"endColumn":33},{"ruleId":"258","severity":1,"message":"298","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":25},{"ruleId":"258","severity":1,"message":"272","line":2,"column":16,"nodeType":"260","messageId":"261","endLine":2,"endColumn":21},{"ruleId":"258","severity":1,"message":"299","line":11,"column":8,"nodeType":"260","messageId":"261","endLine":11,"endColumn":24},{"ruleId":"258","severity":1,"message":"300","line":18,"column":12,"nodeType":"260","messageId":"261","endLine":18,"endColumn":17},{"ruleId":"278","severity":1,"message":"301","line":49,"column":8,"nodeType":"280","endLine":49,"endColumn":10,"suggestions":"302"},{"ruleId":"258","severity":1,"message":"272","line":2,"column":16,"nodeType":"260","messageId":"261","endLine":2,"endColumn":21},{"ruleId":"258","severity":1,"message":"272","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":15},{"ruleId":"303","severity":1,"message":"304","line":9,"column":42,"nodeType":"305","endLine":9,"endColumn":60},{"ruleId":"278","severity":1,"message":"306","line":27,"column":8,"nodeType":"280","endLine":27,"endColumn":10,"suggestions":"307"},{"ruleId":"258","severity":1,"message":"284","line":2,"column":16,"nodeType":"260","messageId":"261","endLine":2,"endColumn":23},{"ruleId":"258","severity":1,"message":"308","line":2,"column":25,"nodeType":"260","messageId":"261","endLine":2,"endColumn":31},{"ruleId":"258","severity":1,"message":"309","line":2,"column":33,"nodeType":"260","messageId":"261","endLine":2,"endColumn":39},{"ruleId":"258","severity":1,"message":"300","line":16,"column":12,"nodeType":"260","messageId":"261","endLine":16,"endColumn":17},{"ruleId":"258","severity":1,"message":"310","line":42,"column":19,"nodeType":"260","messageId":"261","endLine":42,"endColumn":23},{"ruleId":"278","severity":1,"message":"311","line":54,"column":8,"nodeType":"280","endLine":54,"endColumn":10,"suggestions":"312"},{"ruleId":"258","severity":1,"message":"272","line":3,"column":27,"nodeType":"260","messageId":"261","endLine":3,"endColumn":32},{"ruleId":"258","severity":1,"message":"298","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":25},{"ruleId":"313","severity":1,"message":"314","line":12,"column":20,"nodeType":"260","messageId":"315","endLine":12,"endColumn":33},{"ruleId":"258","severity":1,"message":"310","line":17,"column":19,"nodeType":"260","messageId":"261","endLine":17,"endColumn":23},{"ruleId":"258","severity":1,"message":"272","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":15},{"ruleId":"258","severity":1,"message":"272","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":15},{"ruleId":"258","severity":1,"message":"316","line":2,"column":23,"nodeType":"260","messageId":"261","endLine":2,"endColumn":29},{"ruleId":"258","severity":1,"message":"317","line":3,"column":9,"nodeType":"260","messageId":"261","endLine":3,"endColumn":13},{"ruleId":"258","severity":1,"message":"316","line":2,"column":18,"nodeType":"260","messageId":"261","endLine":2,"endColumn":24},{"ruleId":"258","severity":1,"message":"272","line":2,"column":26,"nodeType":"260","messageId":"261","endLine":2,"endColumn":31},{"ruleId":"258","severity":1,"message":"275","line":4,"column":34,"nodeType":"260","messageId":"261","endLine":4,"endColumn":39},{"ruleId":"258","severity":1,"message":"298","line":1,"column":16,"nodeType":"260","messageId":"261","endLine":1,"endColumn":24},{"ruleId":"258","severity":1,"message":"272","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":15},{"ruleId":"258","severity":1,"message":"259","line":1,"column":26,"nodeType":"260","messageId":"261","endLine":1,"endColumn":35},{"ruleId":"258","severity":1,"message":"316","line":2,"column":18,"nodeType":"260","messageId":"261","endLine":2,"endColumn":24},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setValidForm' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["318"],["319"],"'setAdmin' is assigned a value but never used.","'Image' is defined but never used.","'useRef' is defined but never used.","'Button' is defined but never used.","'Radio' is defined but never used.","'selectState' is assigned a value but never used.","'setSelectState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectData'. Either include it or remove the dependency array.","ArrayExpression",["320"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["321"],"'Segment' is defined but never used.","'Dropdown' is defined but never used.","React Hook useEffect has missing dependencies: 'props.handlePlantPick' and 'results'. Either include them or remove the dependency array.",["322"],"React Hook React.useCallback has a missing dependency: 'trefleData'. Either include it or remove the dependency array.",["323"],"'KEY' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'TREFLE_BASE_URL'. Either include it or remove the dependency array.",["324"],["318"],["319"],"'Component' is defined but never used.","'Icon' is defined but never used.","'Feed' is defined but never used.","'useState' is defined but never used.","'PlantDetailsCard' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getShow'. Either include it or remove the dependency array.",["325"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'plant.flowerImages' and 'plant.habitImages'. Either include them or remove the dependency array.",["326"],"'Dimmer' is defined but never used.","'Loader' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProfile' and 'location.pathname'. Either include them or remove the dependency array.",["327"],"no-redeclare","'handleAddPost' is already defined.","redeclared","'Header' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},"Update the dependencies array to be: [selectData, trefleData]",{"range":"344","text":"345"},"Update the dependencies array to be: [selected, state]",{"range":"346","text":"347"},"Update the dependencies array to be: [props.trefleData, props.selected, props.handlePlantPick, results]",{"range":"348","text":"349"},"Update the dependencies array to be: [trefleData]",{"range":"350","text":"351"},"Update the dependencies array to be: [TREFLE_BASE_URL, searchTag]",{"range":"352","text":"353"},"Update the dependencies array to be: [getShow]",{"range":"354","text":"355"},"Update the dependencies array to be: [plant.flowerImages, plant.habitImages]",{"range":"356","text":"357"},"Update the dependencies array to be: [getProfile, location.pathname]",{"range":"358","text":"359"},[2395,2407],"[selectData, trefleData]",[2581,2591],"[selected, state]",[814,848],"[props.trefleData, props.selected, props.handlePlantPick, results]",[1399,1401],"[trefleData]",[2175,2186],"[TREFLE_BASE_URL, searchTag]",[1436,1438],"[getShow]",[947,949],"[plant.flowerImages, plant.habitImages]",[1844,1846],"[getProfile, location.pathname]"]