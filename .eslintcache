[{"/Users/Thom/code/hardy-plant-society/src/index.js":"1","/Users/Thom/code/hardy-plant-society/src/serviceWorker.js":"2","/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx":"3","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx":"4","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx":"5","/Users/Thom/code/hardy-plant-society/src/utils/userService.js":"6","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js":"7","/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx":"8","/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js":"9","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx":"10","/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx":"11","/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx":"12","/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx":"13","/Users/Thom/code/hardy-plant-society/src/pages/PlantPostPage/PlantPostPage.jsx":"14","/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js":"15","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx":"16","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBar.jsx":"17"},{"size":585,"mtime":1610919035047,"results":"18","hashOfConfig":"19"},{"size":5086,"mtime":1610734308620,"results":"20","hashOfConfig":"19"},{"size":1577,"mtime":1611121991287,"results":"21","hashOfConfig":"19"},{"size":2816,"mtime":1611032341156,"results":"22","hashOfConfig":"19"},{"size":1216,"mtime":1611008088032,"results":"23","hashOfConfig":"19"},{"size":1066,"mtime":1610999412746,"results":"24","hashOfConfig":"19"},{"size":312,"mtime":1610734308576,"results":"25","hashOfConfig":"19"},{"size":132,"mtime":1610734308575,"results":"26","hashOfConfig":"19"},{"size":925,"mtime":1610734308621,"results":"27","hashOfConfig":"19"},{"size":3279,"mtime":1611027824541,"results":"28","hashOfConfig":"19"},{"size":1854,"mtime":1611033880866,"results":"29","hashOfConfig":"19"},{"size":296,"mtime":1611026356259,"results":"30","hashOfConfig":"19"},{"size":287,"mtime":1611100192528,"results":"31","hashOfConfig":"19"},{"size":1607,"mtime":1611093289319,"results":"32","hashOfConfig":"19"},{"size":519,"mtime":1611084725259,"results":"33","hashOfConfig":"19"},{"size":5242,"mtime":1611122379131,"results":"34","hashOfConfig":"19"},{"size":744,"mtime":1611122758804,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1pjlbbb",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Thom/code/hardy-plant-society/src/index.js",[],["78","79"],"/Users/Thom/code/hardy-plant-society/src/serviceWorker.js",[],"/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx",["80","81"],"/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx",["82"],"import React, { useState } from 'react';\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\nimport SignupForm from '../../components/Forms/SignupForm/SignupForm'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\n\nexport default function SignUpPage(props){\n  const [invalidForm, setValidForm] = useState(false)\n  const [error, setError ] = useState('')\n  const [selectedFile, setSelectedFile] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [state, setState]  = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n    bio: '',\n    isAdmin: props.admin ? true : false,\n    adminPw:\"\"\n  });\n\n  const history = useHistory()\n  \n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async function handleSubmit(e){\n    // add this later\n    e.preventDefault();\n    setLoading(true);\n    if(props.admin && state.adminPw !== \"felco2\"){\n      setError(\"Wrong credentials\")\n      console.log(error)\n    } else{\n    // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n\n      const formData = new FormData();\n      formData.append('photo', selectedFile);\n\n\n      // generating rest of form data by looping over the state object!\n      for (let key in state){\n        formData.append(key, state[key])\n      }\n      //fyi if you log out formData you won't see anything you have to use the folllowing\n\n      // Display the key/value pairs\n      // for (var pair of formData.entries()) {\n      //   console.log(pair[0]+ ', ' + pair[1]); \n      // }\n\n      // SO now we have are data prepared to send over in our formData object\n      try {\n        // refere to the utils/userService, to look at the signup fetch function\n        await userService.signup(formData);\n        // setTheUser in our app\n        props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\n        // with the correct user object from the current token\n        // then route to the homepage\n        setLoading(false);\n        history.push('/') // defined above from react-router-dom\n        // after this we can go whereever\n\n      } catch(err){\n        console.log(err.message)\n        setError(err.message)\n      }\n    }\n  }\n\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n \n    \n    return (\n      <>\n        {loading ?\n        <LoadingMsg />\n        :\n        <SignupForm \n          handleChange={handleChange} \n          handleSubmit={handleSubmit} \n          handleFileInput={handleFileInput}\n          state={state}\n          error={error}\n          invalidForm={invalidForm}\n        />\n        }\n        \n      </>\n      );   \n    \n}\n","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx",["83"],"import React, { useState, useRef, useEffect } from 'react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport { useForm } from '../../hooks/useForm';\nimport userService from '../../utils/userService';\n\nexport default function LoginPage(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('')\n    const [state, handleChange]       = useForm({\n        email: '',\n        password: '',\n    })\n  \n    const formRef = useRef();\n\n    useEffect(() => {\n      formRef.current.checkValidity() ? setValidForm(false) : setValidForm(true);\n    }, []);\n\n    return (\n        <>\n          <h1>Login</h1>\n          <form  autoComplete=\"off\" ref={formRef} onSubmit={async (e) => {\n            e.preventDefault()\n            \n            try {\n                await userService.login(state);\n                // Route to wherever you want!\n                alert(\"Logged in, time to go code where you want to go now! ~ Login Component!\")\n              } catch (err) {\n                // Invalid user data (probably duplicate email)\n                setError(err.message)\n              }\n          }}>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={ state.email}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                name=\"pw\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={ state.password}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn\"\n              disabled={invalidForm}\n            >\n              Login\n            </button>\n          </form>\n\n          {error ? <ErrorMessage error={error} /> : null}\n        </>\n      );\n}\n\n","/Users/Thom/code/hardy-plant-society/src/utils/userService.js",["84"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log(user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login\n};","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js",[],["85","86"],"/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js",["87"],"function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx",["88"],"import React, { useState } from 'react'\nimport SignupPage from '../SignupPage/SignupPage'\n\nexport default function AdminSignupPage({handleSignUpOrLogin}){\n    const[admin, setAdmin] = useState(true)\n    return(\n        <SignupPage handleSignUpOrLogin={handleSignUpOrLogin} admin={admin}/>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx",["89"],"import React from 'react'\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\n\nconst Loading = () => (\n  <div>\n\n    <Segment>\n      <Dimmer active inverted>\n        <Loader inverted>Loading</Loader>\n      </Dimmer>\n\n      \n    </Segment>\n  </div>\n)\n\nexport default Loading","/Users/Thom/code/hardy-plant-society/src/pages/PlantPostPage/PlantPostPage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx",["90","91","92"],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBar.jsx",["93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":14,"column":10,"nodeType":"100","messageId":"101","endLine":14,"endColumn":14},{"ruleId":"98","severity":1,"message":"102","line":21,"column":12,"nodeType":"100","messageId":"101","endLine":21,"endColumn":24},{"ruleId":"98","severity":1,"message":"103","line":8,"column":23,"nodeType":"100","messageId":"101","endLine":8,"endColumn":35},{"ruleId":"98","severity":1,"message":"103","line":8,"column":25,"nodeType":"100","messageId":"101","endLine":8,"endColumn":37},{"ruleId":"104","severity":1,"message":"105","line":44,"column":1,"nodeType":"106","endLine":49,"endColumn":3},{"ruleId":"94","replacedBy":"107"},{"ruleId":"96","replacedBy":"108"},{"ruleId":"104","severity":1,"message":"105","line":33,"column":3,"nodeType":"106","endLine":38,"endColumn":5},{"ruleId":"98","severity":1,"message":"109","line":5,"column":18,"nodeType":"100","messageId":"101","endLine":5,"endColumn":26},{"ruleId":"98","severity":1,"message":"110","line":2,"column":26,"nodeType":"100","messageId":"101","endLine":2,"endColumn":31},{"ruleId":"98","severity":1,"message":"111","line":28,"column":7,"nodeType":"100","messageId":"101","endLine":28,"endColumn":10},{"ruleId":"98","severity":1,"message":"112","line":33,"column":10,"nodeType":"100","messageId":"101","endLine":33,"endColumn":20},{"ruleId":"113","severity":1,"message":"114","line":48,"column":6,"nodeType":"115","endLine":48,"endColumn":14,"suggestions":"116"},{"ruleId":"98","severity":1,"message":"117","line":2,"column":24,"nodeType":"100","messageId":"101","endLine":2,"endColumn":31},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'handleLogout' is defined but never used.","'setValidForm' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["118"],["119"],"'setAdmin' is assigned a value but never used.","'Image' is defined but never used.","'KEY' is assigned a value but never used.","'trefleData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'TREFLE_BASE_URL' and 'searchTag'. Either include them or remove the dependency array.","ArrayExpression",["120"],"'Segment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [TREFLE_BASE_URL, searchTag, toggle]",{"range":"123","text":"124"},[1525,1533],"[TREFLE_BASE_URL, searchTag, toggle]"]