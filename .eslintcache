[{"/Users/Thom/code/hardy-plant-society/src/index.js":"1","/Users/Thom/code/hardy-plant-society/src/serviceWorker.js":"2","/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx":"3","/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx":"4","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx":"5","/Users/Thom/code/hardy-plant-society/src/utils/userService.js":"6","/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js":"7","/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx":"8","/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js":"9","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx":"10","/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx":"11","/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx":"12","/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx":"13","/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js":"14","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx":"15","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBar.jsx":"16","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchResults.jsx":"17","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBarV2.jsx":"18","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/RadioComponent.jsx":"19","/Users/Thom/code/hardy-plant-society/src/pages/PlantFeedPage/PlantFeedPage.jsx":"20","/Users/Thom/code/hardy-plant-society/src/components/PlantFeed/PlantFeed.jsx":"21","/Users/Thom/code/hardy-plant-society/src/components/PlantCard/PlantCard.jsx":"22","/Users/Thom/code/hardy-plant-society/src/pages/PlantPostCreatePage/PlantPostCreatePage.jsx":"23","/Users/Thom/code/hardy-plant-society/src/pages/PlantDetailPage/PlantDetailPage.jsx":"24","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantShowCard.jsx":"25","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantDetailsCard.jsx":"26","/Users/Thom/code/hardy-plant-society/src/components/DetailsList/DetailsList.jsx":"27","/Users/Thom/code/hardy-plant-society/src/components/Carousel/Carousel.jsx":"28","/Users/Thom/code/hardy-plant-society/src/pages/ProfilePage/ProfilePage.jsx":"29","/Users/Thom/code/hardy-plant-society/src/components/ProfileSection/ProfileSection.jsx":"30"},{"size":585,"mtime":1610919035047,"results":"31","hashOfConfig":"32"},{"size":5086,"mtime":1610734308620,"results":"33","hashOfConfig":"32"},{"size":2967,"mtime":1611464611947,"results":"34","hashOfConfig":"32"},{"size":2816,"mtime":1611032341156,"results":"35","hashOfConfig":"32"},{"size":1216,"mtime":1611008088032,"results":"36","hashOfConfig":"32"},{"size":1375,"mtime":1611463776941,"results":"37","hashOfConfig":"32"},{"size":312,"mtime":1610734308576,"results":"38","hashOfConfig":"32"},{"size":138,"mtime":1611277467964,"results":"39","hashOfConfig":"32"},{"size":925,"mtime":1611294592048,"results":"40","hashOfConfig":"32"},{"size":3279,"mtime":1611027824541,"results":"41","hashOfConfig":"32"},{"size":1854,"mtime":1611033880866,"results":"42","hashOfConfig":"32"},{"size":296,"mtime":1611026356259,"results":"43","hashOfConfig":"32"},{"size":287,"mtime":1611100192528,"results":"44","hashOfConfig":"32"},{"size":1408,"mtime":1611348320389,"results":"45","hashOfConfig":"32"},{"size":8023,"mtime":1611350417752,"results":"46","hashOfConfig":"32"},{"size":824,"mtime":1611195175760,"results":"47","hashOfConfig":"32"},{"size":373,"mtime":1611281732237,"results":"48","hashOfConfig":"32"},{"size":3055,"mtime":1611209438791,"results":"49","hashOfConfig":"32"},{"size":659,"mtime":1611255868880,"results":"50","hashOfConfig":"32"},{"size":996,"mtime":1611435891828,"results":"51","hashOfConfig":"32"},{"size":504,"mtime":1611435829479,"results":"52","hashOfConfig":"32"},{"size":1471,"mtime":1611462379084,"results":"53","hashOfConfig":"32"},{"size":935,"mtime":1611272607566,"results":"54","hashOfConfig":"32"},{"size":2302,"mtime":1611362034624,"results":"55","hashOfConfig":"32"},{"size":618,"mtime":1611461784481,"results":"56","hashOfConfig":"32"},{"size":1157,"mtime":1611462454365,"results":"57","hashOfConfig":"32"},{"size":168,"mtime":1611435537951,"results":"58","hashOfConfig":"32"},{"size":1337,"mtime":1611461376520,"results":"59","hashOfConfig":"32"},{"size":2608,"mtime":1611464833455,"results":"60","hashOfConfig":"32"},{"size":677,"mtime":1611464406598,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1pjlbbb",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Thom/code/hardy-plant-society/src/index.js",[],["137","138"],"/Users/Thom/code/hardy-plant-society/src/serviceWorker.js",[],"/Users/Thom/code/hardy-plant-society/src/pages/App/App.jsx",["139"],"/Users/Thom/code/hardy-plant-society/src/pages/SignupPage/SignupPage.jsx",["140"],"import React, { useState } from 'react';\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\nimport SignupForm from '../../components/Forms/SignupForm/SignupForm'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\n\nexport default function SignUpPage(props){\n  const [invalidForm, setValidForm] = useState(false)\n  const [error, setError ] = useState('')\n  const [selectedFile, setSelectedFile] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [state, setState]  = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n    bio: '',\n    isAdmin: props.admin ? true : false,\n    adminPw:\"\"\n  });\n\n  const history = useHistory()\n  \n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async function handleSubmit(e){\n    // add this later\n    e.preventDefault();\n    setLoading(true);\n    if(props.admin && state.adminPw !== \"felco2\"){\n      setError(\"Wrong credentials\")\n      console.log(error)\n    } else{\n    // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n\n      const formData = new FormData();\n      formData.append('photo', selectedFile);\n\n\n      // generating rest of form data by looping over the state object!\n      for (let key in state){\n        formData.append(key, state[key])\n      }\n      //fyi if you log out formData you won't see anything you have to use the folllowing\n\n      // Display the key/value pairs\n      // for (var pair of formData.entries()) {\n      //   console.log(pair[0]+ ', ' + pair[1]); \n      // }\n\n      // SO now we have are data prepared to send over in our formData object\n      try {\n        // refere to the utils/userService, to look at the signup fetch function\n        await userService.signup(formData);\n        // setTheUser in our app\n        props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\n        // with the correct user object from the current token\n        // then route to the homepage\n        setLoading(false);\n        history.push('/') // defined above from react-router-dom\n        // after this we can go whereever\n\n      } catch(err){\n        console.log(err.message)\n        setError(err.message)\n      }\n    }\n  }\n\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n \n    \n    return (\n      <>\n        {loading ?\n        <LoadingMsg />\n        :\n        <SignupForm \n          handleChange={handleChange} \n          handleSubmit={handleSubmit} \n          handleFileInput={handleFileInput}\n          state={state}\n          error={error}\n          invalidForm={invalidForm}\n        />\n        }\n        \n      </>\n      );   \n    \n}\n","/Users/Thom/code/hardy-plant-society/src/pages/LoginPage/LoginPage.jsx",["141"],"import React, { useState } from 'react';\nimport './LoginPage.css';\nimport { useHistory } from 'react-router-dom';\nimport userService from '../../utils/userService';\nimport LoginForm from '../../components/Forms/LoginForm/LoginForm'\n\nexport default function LoginPage(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('')\n    const [state, setState]       = useState({\n        email: '',\n        password: '',\n    })\n  \n    const history = useHistory();\n    \n    function handleChange(e){\n      setState({\n        ...state,\n        [e.target.name]: e.target.value\n      })\n    }\n   \n    \n\n    async function handleSubmit(e){\n      e.preventDefault()\n              \n      try {\n          await userService.login(state);\n          // Route to wherever you want!\n          props.handleSignUpOrLogin() // \n          history.push('/')\n          \n        } catch (err) {\n          // Invalid user data (probably duplicate email)\n          setError(err.message)\n        }\n    }\n\n    return (\n        <>\n          <LoginForm handleSubmit={handleSubmit} handleChange={handleChange} state={state} error={error} invalidForm={invalidForm}/>\n        </>\n      );\n}\n\n","/Users/Thom/code/hardy-plant-society/src/utils/userService.js",["142"],"/Users/Thom/code/hardy-plant-society/src/hooks/useForm.js",[],["143","144"],"/Users/Thom/code/hardy-plant-society/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/utils/tokenService.js",["145"],"function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/Users/Thom/code/hardy-plant-society/src/components/Forms/SignupForm/SignupForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/LoginForm/LoginForm.jsx",[],"/Users/Thom/code/hardy-plant-society/src/pages/AdminSignupPage/AdminSignupPage.jsx",["146"],"import React, { useState } from 'react'\nimport SignupPage from '../SignupPage/SignupPage'\n\nexport default function AdminSignupPage({handleSignUpOrLogin}){\n    const[admin, setAdmin] = useState(true)\n    return(\n        <SignupPage handleSignUpOrLogin={handleSignUpOrLogin} admin={admin}/>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/components/LoadingMsg/LoadingMsg.jsx",["147"],"import React from 'react'\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\n\nconst Loading = () => (\n  <div>\n\n    <Segment>\n      <Dimmer active inverted>\n        <Loader inverted>Loading</Loader>\n      </Dimmer>\n\n      \n    </Segment>\n  </div>\n)\n\nexport default Loading","/Users/Thom/code/hardy-plant-society/src/utils/plantPostService.js",[],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantPostForm.jsx",["148","149","150","151","152","153","154","155"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Form, Radio, Segment } from 'semantic-ui-react'\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\nimport 'react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css';\nimport PlantSearchBar from './PlantSearchBar'\nimport PlantSearchResults from './PlantSearchResults'\nimport RadioComponent from './RadioComponent'\nimport * as plantPostAPI from '../../../utils/plantPostService'\n\nexport default function PlantPostForm(props){\n\n // Trefle API variables\n const KEY = process.env.KEY\n const TREFLE_BASE_URL = `https://trefle.io/api/v1/species/search?token=nGl9aJhLyHSPDXgy_7THrf3UycmVNDpcU4kvluaWwZQ&q=`\n const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n    //---------------------------------------- state hooks --------------------------------------//\n   // Image to be uploaded to AWS \n  const [selectedFile, setSelectedFile] = useState('')\n  // Custom form data\n  const [state, setState] = useState({\n    forSale: false,\n    isSeed: false,\n    isRootstock: false,\n    dateCollected: new Date(),\n    quantity: 1,\n    description: \"\",\n    photoUrl: \"\",\n    plant: \"\",\n    cultivar: \"\"\n\n  })\n\n  // Plant Search Results state\n  const [selectState, setSelectState] = useState('');\n\n  // Radio Toggle State\n  const [radioToggle, setRadioToggle] = useState(true);\n\n  // Trefle API data\n  const [trefleData, setTrefleData] = useState(\"\");\n  const [searchTag, setSearchTag] = useState(\"\");\n  const [toggle, setToggle] = useState(true);\n  const [selectData, setSelectData] = useState([]);\n  const [selectedPlantData, setSelectedPlantData] = useState({})\n//---------------------------------------- useEffect --------------------------------------//\n//   // Trefle Search API Call\n//   useEffect(() => {\n//     console.log(searchTag, \"useEffect searchTag\");\n//     console.log(KEY, \"KEY <--------------\")\n//     const trefleUrl = `${TREFLE_BASE_URL}${searchTag.replace(/\\s/g, '&')}`;\n//     fetch(proxyurl + trefleUrl)\n//       .then((res) => res.json())\n//       .then((data) => {\n//         console.log(data.data, \"json data\");\n//         setTrefleData(data.data);\n        \n//       });\n//   }, [searchTag]);\n\n   // Back end Trefle search request \n  \n   async function getTrefleData(search){\n   \n   try {\n     const data = await plantPostAPI.searchTrefle(search);\n     console.log(data.json.data, \"data from postform page\")\n     setTrefleData([...data.json.data])\n   } catch(err){\n     console.log(err, ' this is the error')\n   }\n   }  \n\n   useEffect(() => {\n       getTrefleData(searchTag)\n   }, [searchTag])\n  \n  // creates array for select menu from Trefle Data\n  useEffect(() => {\n    if(trefleData){\n        let mappedData = trefleData.map((result, index) => {\n            return ({\n                key: result.slug,\n                text: result.common_name ? result.common_name + \" / \" + result.scientific_name : result.scientific_name,\n                value: result.slug,\n                image: { avatar: true, src: result.image_url }\n            })\n        });\n        setSelectData(mappedData);\n        console.log(selectData, \"<----selectData from useEffect\")\n    }\n  }, [trefleData]);\n\n  useEffect(() => {\n    setState({\n        ...state,\n        plant: selectState\n    })\n  }, [selectState])\n\n\n  //---------------------------------------- functions- handlers / submit --------------------------------------//\n\n  // Trefle API submit handler\n  const handleTrefleSubmit = (e, tag) => {\n    e.preventDefault()\n    console.log(\"From App - making API Call - tag - >\", tag);\n    setSearchTag(tag.replace(/\\s/g, '&'));\n    setToggle(!toggle);\n  };\n\n    // Plant Search Results hanlder\n    function handleSelectChange(e, result){\n        setSelectState(result.value)\n        \n        console.log(result, \"dropdown Change\")\n        }\n\n  // Photo File\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n\n  // update values for text fields\n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  // toggle between Seed and Plant submission\n  function handleToggle(e){\n      setState({\n          ...state,\n          isSeed: state.isSeed ? false : true,\n          isRootstock: state.isSeed ? false : true\n      })\n      setRadioToggle(!radioToggle);\n  }\n\n  // datepicker handler\n  function handleDate(event, data){\n    setState({\n        ...state,\n        dateCollected: data.value\n      })\n  }\n\n  function handleToggleChange(){\n      setState({\n          ...state,\n          forSale: !state.forSale\n      })\n  }\n  \n\n\n  //main form submit handler\n  function handleSubmit(e){\n\n\n\n    e.preventDefault()\n             \n    const formData = new FormData()\n    formData.append('photo', selectedFile)\n    formData.append('forSale', state.forSale)\n    formData.append('isSeed', state.isSeed)\n    formData.append('isRootstock', state.isRootstock)\n    formData.append('dateCollected', state.dateCollected)\n    formData.append('quantity', state.quantity)\n    formData.append('description', state.description)\n    formData.append('plant', state.plant)\n    formData.append('cultivar', state.cultivar)\n    props.handleAddPost(formData)\n    \n  }\n\n\n  return (\n    \n  \n        <Segment>\n        \n            <Form  autoComplete=\"off\" onSubmit={handleSubmit}>\n              <h3>What are you contributing?</h3>\n              <RadioComponent handleChange={handleToggle} toggle={radioToggle} />\n              \n              {state.isSeed ? \n              <p>Collected seeds, or a plant that has set seed and can be harvested</p>\n              :\n              <p>Mature plant with established roots or runners that can transplanted.</p>\n              }\n              \n              \n              <PlantSearchBar handleSubmit={handleTrefleSubmit} />\n              \n              <PlantSearchResults selectData={selectData} handleChange={handleSelectChange} selectState={selectState}/>\n\n              <Form.Input\n                  className=\"form-control\"\n                  name=\"cultivar\"\n                  value={state.cultivar}\n                  placeholder=\"Cultivar name if known or if it exists...\"\n                  onChange={handleChange}\n                  required\n              /> \n              <Form.Input\n                  className=\"form-control\"\n                  name=\"description\"\n                  value={state.description}\n                  placeholder={state.isSeed ? \"Describe your collection of seeds or plant that has set seed\" : \"Describe your rootstock or runners that are ready to be transplanted\"}\n                  onChange={handleChange}\n                  required\n              /> \n              <h3>How many {state.isSeed ? \"packets of seed\" : \"plants\"} do you have?</h3>\n              <Form.Input\n                className=\"form-control\"\n                name=\"quantity\"\n                value={state.quantity}\n                onChange={handleChange}\n                required\n              />\n              <h3>When was this collected?</h3>\n              <SemanticDatepicker value={state.dateCollected} onChange={handleDate} />\n\n              {props.user.isAdmin ? \n                <Form.Field>\n                    <Radio\n                        label='For Sale'\n                        name='forSale'\n                        value='forSale'\n                        checked={state.forSale}\n                        onClick={handleToggleChange}\n                    />\n                </Form.Field> \n              : \n              \"\"}\n              \n\n              <h3>Do you have a photo?</h3>\n              <Form.Input\n                className=\"form-control\"\n                type=\"file\"\n                name=\"photo\"\n                placeholder=\"upload image\"\n                onChange={handleFileInput}\n              />   \n              <Button\n                type=\"submit\"\n                className=\"btn\"\n              >\n                SUBMIT\n              </Button>\n            </Form>\n            \n          </Segment>\n     \n   \n  ); \n}","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBar.jsx",["156"],"import React, { useState } from \"react\";\nimport { Button, Form, Segment } from 'semantic-ui-react'\nimport './PlantPostForm.css';\n\nexport default function PlantSearchBar(props) {\n  const [searchTag, setSearchTag] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // remove spaces- use regex\n    props.handleSubmit(e, searchTag);\n    setSearchTag(\"\");\n  };\n\n  const handleChange = (e) => {\n    const tag = e.target.value;\n    setSearchTag(tag);\n  };\n\n  return (\n    <>\n        <Form.Input\n          id=\"tagInput\"\n          type=\"text\"\n          value={searchTag}\n          placeholder=\"Search common or scientific name\"\n          onChange={handleChange}\n        />\n        <div id=\"div\">\n        <Button  onClick={handleSubmit} value=\"Search\" id=\"right\">Search</Button>\n        </div>\n    </>\n  );\n}","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchResults.jsx",["157"],"import React, {useState} from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\n\n\nexport default function DropdownExampleSelection(props){\n\n\n\n  return(\n    <Dropdown\n    value={props.selectState}\n    placeholder='Select Plant'\n    noResultsMessage='No Results'\n    fluid\n    selection\n    options={props.selectData}\n    onChange={props.handleChange}\n  />\n  )\n  \n} \n  \n\n","/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/PlantSearchBarV2.jsx",["158","159","160"],"import React, {useState, useEffect} from 'react'\nimport { Search, Grid, Header, Segment, Label, Image } from 'semantic-ui-react'\n\n\n\nconst initialState = {\n  loading: false,\n  results: [],\n  value: '',\n  searchTag: ''\n}\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CLEAN_QUERY':\n      return initialState\n    case 'START_SEARCH':\n      return { ...state, loading: true, value: action.query, searchTag: action.query }\n    case 'FINISH_SEARCH':\n      return { ...state, loading: false, results: action.results }\n    case 'UPDATE_SELECTION':\n      return { ...state, value: action.selection }\n\n    default:\n      throw new Error()\n  }\n}\n\nconst resultRenderer = ({ common_name, image_url }) => <><Label content={common_name} /><Image src={image_url}/></>\n\nfunction SearchExampleStandardCustom() {\n  const [state, dispatch] = React.useReducer(exampleReducer, initialState)\n  const { loading, results, value, searchTag } = state\n\n  const timeoutRef = React.useRef()\n  const handleSearchChange = React.useCallback((e, data) => {\n    clearTimeout(timeoutRef.current)\n    dispatch({ type: 'START_SEARCH', query: data.value })\n\n    timeoutRef.current = setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({ type: 'CLEAN_QUERY' })\n        return\n      }\n\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: trefleData,\n      })\n    }, 300)\n  }, [])\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current)\n    }\n  }, [])\n\n   // Trefle API variables\n   const KEY = process.env.TREFLETOKEN;\n   const TREFLE_BASE_URL = `https://trefle.io/api/v1/plants/search?token=nGl9aJhLyHSPDXgy_7THrf3UycmVNDpcU4kvluaWwZQ&q=`;\n \n   // Trefle API data\n   const [trefleData, setTrefleData] = useState(\"\");\n \n   // Trefle API Call\n   useEffect(() => {\n     const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n     console.log(searchTag, \"useEffect searchTag\");\n     const trefleUrl = `${TREFLE_BASE_URL}${searchTag}`;\n     fetch(proxyurl + trefleUrl)\n       .then((res) => res.json())\n       .then((data) => {\n         console.log(data.data, \"json data\");\n         setTrefleData(data.data);\n       });\n   }, [searchTag]);\n\n  return (\n    <Grid>\n      <Grid.Column width={6}>\n        <Search\n          loading={loading}\n          onResultSelect={(e, data) =>\n            dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\n          }\n          onSearchChange={handleSearchChange}\n          resultRenderer={resultRenderer}\n          results={trefleData}\n          value={value}\n        />\n      </Grid.Column>\n\n      <Grid.Column width={10}>\n        <Segment>\n          <Header>State</Header>\n          <pre style={{ overflowX: 'auto' }}>\n            {JSON.stringify({ loading, results, value }, null, 2)}\n          </pre>\n          <Header>Options</Header>\n          <pre style={{ overflowX: 'auto' }}>\n            {JSON.stringify(trefleData, null, 2)}\n          </pre>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default SearchExampleStandardCustom",["161","162"],"/Users/Thom/code/hardy-plant-society/src/components/Forms/PlantPostForm/RadioComponent.jsx",["163"],"import React, { Component } from 'react'\nimport { Form, Radio } from 'semantic-ui-react'\n\nexport default function RadioComponent(props) {\n  \n\n    return (\n      <>\n        <Form.Field>\n          <Radio\n            label='Rootstock'\n            name='radioGroup'\n            value='isRootstock'\n            checked={props.toggle}\n            onChange={props.handleChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Radio\n            label='Seed'\n            name='radioGroup'\n            value='isSeed'\n            checked={!props.toggle}\n            onChange={props.handleChange}\n          />\n        </Form.Field>\n      </>\n    )\n  }\n","/Users/Thom/code/hardy-plant-society/src/pages/PlantFeedPage/PlantFeedPage.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantFeed/PlantFeed.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantCard/PlantCard.jsx",["164","165"],"/Users/Thom/code/hardy-plant-society/src/pages/PlantPostCreatePage/PlantPostCreatePage.jsx",["166"],"import React, { useState } from 'react';\nimport './PlantPostCreatePage.css';\nimport PlantPostForm from '../../components/Forms/PlantPostForm/PlantPostForm'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\n\nimport {  Grid } from 'semantic-ui-react'\n\n// create PlantPost service folder, add functions\n\nexport default function PlantPostPage(props){\n \n\n\n    return (\n        <>\n            <Grid centered >\n            <Grid.Row>\n            <Grid.Column>\n                Header\n            </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n            <Grid.Column style={{ maxWidth: 750 }}>\n                {props.loading ?\n                    <LoadingMsg />\n                    :\n                    \n                    <PlantPostForm handleAddPost={props.handleAddPost} user={props.user}/>\n                }\n            </Grid.Column>\n            </Grid.Row>\n        </Grid>\n            \n        </>\n    )\n}","/Users/Thom/code/hardy-plant-society/src/pages/PlantDetailPage/PlantDetailPage.jsx",["167","168","169","170"],"import React, { useState, useEffect } from 'react';\nimport { Grid, Image } from 'semantic-ui-react'\nimport LoadingMsg from '../../components/LoadingMsg/LoadingMsg'\nimport * as plantPostService from '../../utils/plantPostService'\n\nimport PlantShowCard from '../../components/PlantShow/PlantShowCard'\n\n\n\nimport { useLocation } from 'react-router-dom';\nimport PlantDetailsCard from '../../components/PlantShow/PlantDetailsCard';\n\nexport default function PlantDetailPage({ user, handleLogout }) {\n\n    const [post, setPost] = useState({})\n    // const [profileUser, setProfileUser] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n\n    const location = useLocation()\n    console.log(location.pathname.substring(1))\n\n    async function getShow() {\n\n        try {\n\n            // *HARDCODED* substring(10) returns the pathname after /plantswap specifically.\n            const plantDetail = location.pathname.substring(10)\n          \n            console.log(plantDetail)\n            const data = await plantPostService.getOne(plantDetail);\n            console.log(data, \"<--------- data from getShow\")\n            \n            setPost(data.post)\n            setLoading(() => false)\n        } catch (err) {\n            console.log(err)\n            setError(err)\n        }\n    }\n\n\n    \n\n\n    useEffect(() => {\n        getShow()\n\n    }, [])\n\n\n\n    return (\n\n        <>\n            { loading ?\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle' >\n                \n                        <Grid.Column style={{ maxWidth: 750}}>\n                            \n                                <LoadingMsg />\n                         \n                        </Grid.Column>\n                 \n                </Grid>\n                :\n                <Grid centered>\n                    <Grid.Row>\n                        <Grid.Column>\n                            Header\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column style={{maxWidth: 800}}>\n                            <PlantShowCard post={post}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }\n        </>\n    )\n}\n","/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantShowCard.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/PlantShow/PlantDetailsCard.jsx",["171"],"/Users/Thom/code/hardy-plant-society/src/components/DetailsList/DetailsList.jsx",[],"/Users/Thom/code/hardy-plant-society/src/components/Carousel/Carousel.jsx",["172","173","174"],"/Users/Thom/code/hardy-plant-society/src/pages/ProfilePage/ProfilePage.jsx",["175","176","177","178","179"],"/Users/Thom/code/hardy-plant-society/src/components/ProfileSection/ProfileSection.jsx",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"188","line":8,"column":23,"nodeType":"186","messageId":"187","endLine":8,"endColumn":35},{"ruleId":"184","severity":1,"message":"188","line":8,"column":25,"nodeType":"186","messageId":"187","endLine":8,"endColumn":37},{"ruleId":"189","severity":1,"message":"190","line":55,"column":1,"nodeType":"191","endLine":61,"endColumn":3},{"ruleId":"180","replacedBy":"192"},{"ruleId":"182","replacedBy":"193"},{"ruleId":"189","severity":1,"message":"190","line":33,"column":3,"nodeType":"191","endLine":38,"endColumn":5},{"ruleId":"184","severity":1,"message":"194","line":5,"column":18,"nodeType":"186","messageId":"187","endLine":5,"endColumn":26},{"ruleId":"184","severity":1,"message":"195","line":2,"column":26,"nodeType":"186","messageId":"187","endLine":2,"endColumn":31},{"ruleId":"184","severity":1,"message":"196","line":1,"column":38,"nodeType":"186","messageId":"187","endLine":1,"endColumn":44},{"ruleId":"184","severity":1,"message":"197","line":13,"column":8,"nodeType":"186","messageId":"187","endLine":13,"endColumn":11},{"ruleId":"184","severity":1,"message":"198","line":14,"column":8,"nodeType":"186","messageId":"187","endLine":14,"endColumn":23},{"ruleId":"184","severity":1,"message":"199","line":15,"column":8,"nodeType":"186","messageId":"187","endLine":15,"endColumn":16},{"ruleId":"184","severity":1,"message":"200","line":45,"column":10,"nodeType":"186","messageId":"187","endLine":45,"endColumn":27},{"ruleId":"184","severity":1,"message":"201","line":45,"column":29,"nodeType":"186","messageId":"187","endLine":45,"endColumn":49},{"ruleId":"202","severity":1,"message":"203","line":92,"column":6,"nodeType":"204","endLine":92,"endColumn":18,"suggestions":"205"},{"ruleId":"202","severity":1,"message":"206","line":99,"column":6,"nodeType":"204","endLine":99,"endColumn":19,"suggestions":"207"},{"ruleId":"184","severity":1,"message":"208","line":2,"column":24,"nodeType":"186","messageId":"187","endLine":2,"endColumn":31},{"ruleId":"184","severity":1,"message":"209","line":1,"column":16,"nodeType":"186","messageId":"187","endLine":1,"endColumn":24},{"ruleId":"202","severity":1,"message":"210","line":51,"column":6,"nodeType":"204","endLine":51,"endColumn":8,"suggestions":"211"},{"ruleId":"184","severity":1,"message":"197","line":59,"column":10,"nodeType":"186","messageId":"187","endLine":59,"endColumn":13},{"ruleId":"202","severity":1,"message":"212","line":76,"column":7,"nodeType":"204","endLine":76,"endColumn":18,"suggestions":"213"},{"ruleId":"180","replacedBy":"214"},{"ruleId":"182","replacedBy":"215"},{"ruleId":"184","severity":1,"message":"216","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"184","severity":1,"message":"217","line":2,"column":16,"nodeType":"186","messageId":"187","endLine":2,"endColumn":20},{"ruleId":"184","severity":1,"message":"218","line":2,"column":29,"nodeType":"186","messageId":"187","endLine":2,"endColumn":33},{"ruleId":"184","severity":1,"message":"209","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"195","line":2,"column":16,"nodeType":"186","messageId":"187","endLine":2,"endColumn":21},{"ruleId":"184","severity":1,"message":"219","line":11,"column":8,"nodeType":"186","messageId":"187","endLine":11,"endColumn":24},{"ruleId":"184","severity":1,"message":"220","line":18,"column":12,"nodeType":"186","messageId":"187","endLine":18,"endColumn":17},{"ruleId":"202","severity":1,"message":"221","line":49,"column":8,"nodeType":"204","endLine":49,"endColumn":10,"suggestions":"222"},{"ruleId":"184","severity":1,"message":"195","line":2,"column":16,"nodeType":"186","messageId":"187","endLine":2,"endColumn":21},{"ruleId":"184","severity":1,"message":"195","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":9,"column":42,"nodeType":"225","endLine":9,"endColumn":60},{"ruleId":"202","severity":1,"message":"226","line":27,"column":8,"nodeType":"204","endLine":27,"endColumn":10,"suggestions":"227"},{"ruleId":"184","severity":1,"message":"208","line":2,"column":16,"nodeType":"186","messageId":"187","endLine":2,"endColumn":23},{"ruleId":"184","severity":1,"message":"228","line":2,"column":25,"nodeType":"186","messageId":"187","endLine":2,"endColumn":31},{"ruleId":"184","severity":1,"message":"229","line":2,"column":33,"nodeType":"186","messageId":"187","endLine":2,"endColumn":39},{"ruleId":"184","severity":1,"message":"220","line":15,"column":12,"nodeType":"186","messageId":"187","endLine":15,"endColumn":17},{"ruleId":"202","severity":1,"message":"230","line":45,"column":8,"nodeType":"204","endLine":45,"endColumn":10,"suggestions":"231"},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setValidForm' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["232"],["233"],"'setAdmin' is assigned a value but never used.","'Image' is defined but never used.","'useRef' is defined but never used.","'KEY' is assigned a value but never used.","'TREFLE_BASE_URL' is assigned a value but never used.","'proxyurl' is assigned a value but never used.","'selectedPlantData' is assigned a value but never used.","'setSelectedPlantData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectData'. Either include it or remove the dependency array.","ArrayExpression",["234"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["235"],"'Segment' is defined but never used.","'useState' is defined but never used.","React Hook React.useCallback has a missing dependency: 'trefleData'. Either include it or remove the dependency array.",["236"],"React Hook useEffect has a missing dependency: 'TREFLE_BASE_URL'. Either include it or remove the dependency array.",["237"],["232"],["233"],"'Component' is defined but never used.","'Icon' is defined but never used.","'Feed' is defined but never used.","'PlantDetailsCard' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getShow'. Either include it or remove the dependency array.",["238"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'plant.flowerImages' and 'plant.habitImages'. Either include them or remove the dependency array.",["239"],"'Dimmer' is defined but never used.","'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["240"],"no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [selectData, trefleData]",{"range":"255","text":"256"},"Update the dependencies array to be: [selectState, state]",{"range":"257","text":"258"},"Update the dependencies array to be: [trefleData]",{"range":"259","text":"260"},"Update the dependencies array to be: [TREFLE_BASE_URL, searchTag]",{"range":"261","text":"262"},"Update the dependencies array to be: [getShow]",{"range":"263","text":"264"},"Update the dependencies array to be: [plant.flowerImages, plant.habitImages]",{"range":"265","text":"266"},"Update the dependencies array to be: [getProfile]",{"range":"267","text":"268"},[3180,3192],"[selectData, trefleData]",[3288,3301],"[selectState, state]",[1399,1401],"[trefleData]",[2175,2186],"[TREFLE_BASE_URL, searchTag]",[1385,1387],"[getShow]",[947,949],"[plant.flowerImages, plant.habitImages]",[1440,1442],"[getProfile]"]